@using OpenIddict.Abstractions
@using OrchardCore.OpenId.ViewModels
@using Microsoft.IdentityModel.Protocols.OpenIdConnect
@model OpenIdClientSettingsViewModel

<script asp-src="~/OrchardCore.OpenId/Scripts/parametersEditor.min.js" debug-src="~/OrchardCore.OpenId/Scripts/parametersEditor.js" asp-name="parametersEditor" at="Foot" depends-on="vuejs, vuedraggable"></script>
<style asp-src="~/OrchardCore.OpenId/Styles/parametersEditor.min.css" debug-src="~/OrchardCore.OpenId/Styles/parametersEditor.css"></style>

<script at="Foot">
    initializeParametersEditor(document.getElementById('@Html.IdFor(m => m)'), @Html.Raw(Model.Parameters), document.getElementsByClassName('@Html.IdFor(m => m)-ModalBody'));
</script>

<div class="mb-3" asp-validation-class-for="DisplayName">
    <label asp-for="DisplayName" class="form-label">@T["Display Name"]</label>
    <input asp-for="DisplayName" class="form-control" />
    <span asp-validation-for="DisplayName"></span>
    <span class="hint">@T["User-Friendly Display Name of the identity provider"]</span>
</div>

<div class="mb-3" asp-validation-class-for="Authority">
    <label asp-for="Authority" class="form-label">@T["Authority"]</label>
    <input asp-for="Authority" class="form-control" />
    <span asp-validation-for="Authority"></span>
    <span class="hint">@T["Authority URL for OpenID Connect Requests"]</span>
</div>

<div class="mb-3" asp-validation-class-for="ClientId">
    <label asp-for="ClientId" class="form-label">@T["ClientId"]</label>
    <input asp-for="ClientId" class="form-control" />
    <span asp-validation-for="ClientId"></span>
    <span class="hint">@T["The '{0}' assigned by the identity provider.", "client_id"]</span>
</div>

<div class="mb-3" asp-validation-class-for="CallbackPath">
    <label asp-for="CallbackPath" class="form-label">@T["CallbackPath"]</label>
    <input asp-for="CallbackPath" placeholder="/signin-oidc" class="form-control" />
    <span asp-validation-for="CallbackPath"></span>
    <span class="hint">@T["The request path, relative to the application's base path, where the user-agent will be redirected. The middleware will handle this request upon arrival."]</span>
</div>

<div class="mb-3" asp-validation-class-for="SignedOutCallbackPath">
    <label asp-for="SignedOutCallbackPath" class="form-label">@T["SignedOut CallbackPath"]</label>
    <input asp-for="SignedOutCallbackPath" placeholder="/signout-callback-oidc" class="form-control" />
    <span asp-validation-for="SignedOutCallbackPath"></span>
    <span class="hint">@T["The request path within the application's base path where the user-agent will be redirected after signing out from the identity provider."]</span>
    <span class="hint">
        @T["For more information about 'post_logout_redirect_uri', visit: <a href=\"{0}\" target=\"_blank\">", "https://openid.net/specs/openid-connect-rpinitiated-1_0.html#RedirectionAfterLogout"]</a>
    </span>
</div>

<div class="mb-3" asp-validation-class-for="SignedOutRedirectUri">
    <label asp-for="SignedOutRedirectUri" class="form-label">@T["SignedOut Redirect Uri"]</label>
    <input asp-for="SignedOutRedirectUri" placeholder="/" class="form-control" />
    <span asp-validation-for="SignedOutRedirectUri"></span>
    <span class="hint">@T["The URI to which the user-agent will be redirected after the application signs out from the identity provider. This redirect occurs following the invocation of the SignedOutCallbackPath."]</span>
</div>

<div class="mb-3" asp-validation-class-for="Scopes">
    <label asp-for="Scopes" class="form-label">@T["Scopes"]</label>
    <input asp-for="Scopes" class="form-control" autocomplete="new-password" />
    <span asp-validation-for="Scopes"></span>
    <span class="hint">@T["Request additional scopes beyond '{0}' and '{1}'.", OpenIddictConstants.Scopes.OpenId, OpenIddictConstants.Scopes.Profile]</span>
</div>

<div class="mb-3" asp-validation-class-for="StoreExternalTokens">
    <div class="form-check">
        <input type="checkbox" class="form-check-input" asp-for="StoreExternalTokens">
        <label class="form-check-label" asp-for="StoreExternalTokens">@T["Store tokens?"]</label>
        <span class="hint dashed">@T["Store external authentication tokens for future use."]</span>
    </div>
</div>

<div class="my-4">
    <h3>@T["Code Authentication Flow"]</h3>
    <p>@T["Click <a href=\"{0}\" target=\"_blank\">here</a> for more information about the Authorization Code Flow.", "http://openid.net/specs/openid-connect-core-1_0.html#CodeFlowAuth"]</p>

    <div class="mb-3" asp-validation-class-for="UseCodeFlow">
        <div class="form-check">
            <input type="checkbox" class="form-check-input" asp-for="UseCodeFlow">
            <label class="form-check-label" asp-for="UseCodeFlow">@T["Use 'code' response type"]</label>
            <span class="hint dashed">@T["Click <a href=\"{0}\" target=\"_blank\">here</a> for an example.", "http://openid.net/specs/openid-connect-core-1_0.html#codeExample"]</span>
        </div>
    </div>
</div>

<div class="mb-4">
    <h3>@T["Hybrid Authentication Flow"]</h3>
    <p>@T["Click <a href=\"{0}\" target=\"_blank\">here</a> for more information about the Hybrid Flow.", "http://openid.net/specs/openid-connect-core-1_0.html#HybridFlowAuth"]</p>

    <div class="mb-3" asp-validation-class-for="UseCodeIdTokenFlow">
        <div class="form-check">
            <input type="checkbox" class="form-check-input" asp-for="UseCodeIdTokenFlow">
            <label class="form-check-label" asp-for="UseCodeIdTokenFlow">@T["Use <code>{0}</code> response type", "code id_token"]</label>
            <span class="hint dashed">@T["Click <a href=\"{0}\" target=\"_blank\">here</a> for an example.", "http://openid.net/specs/openid-connect-core-1_0.html#code-id_tokenExample"]</span>
        </div>
    </div>

    <div class="mb-3" asp-validation-class-for="UseCodeIdTokenTokenFlow">
        <div class="form-check">
            <input type="checkbox" class="form-check-input" asp-for="UseCodeIdTokenTokenFlow">
            <label class="form-check-label" asp-for="UseCodeIdTokenTokenFlow">@T["Use <code>{0}</code> response type", "code id_token token"]</label>
            <span class="hint dashed">@T["Click <a href=\"{0}\" target=\"_blank\">here</a> for an example.", "http://openid.net/specs/openid-connect-core-1_0.html#code-id_token-tokenExample"]</span>
        </div>
    </div>

    <div class="mb-3" asp-validation-class-for="UseCodeTokenFlow">
        <div class="form-check">
            <input type="checkbox" class="form-check-input" asp-for="UseCodeTokenFlow">
            <label class="form-check-label" asp-for="UseCodeTokenFlow">@T["Use <code>{0}</code> response type", "code token"]</label>
            <span class="hint dashed">@T["Click <a href=\"{0}\" target=\"_blank\">here</a> for an example.", "http://openid.net/specs/openid-connect-core-1_0.html#code-tokenExample"]</span>
        </div>
    </div>

    <div class="mb-3 collapse" asp-validation-class-for="ClientSecret">
        <label asp-for="ClientSecret" class="form-label">@T["Client Secret"]</label>
        <input asp-for="ClientSecret" class="form-control" type="password" autocomplete="new-password" placeholder="@(Model.HasClientSecret ? T["A client secret is securely stored. Provide a new one to replace it."]: T["Set a client secret for your new account."])" />
        <span asp-validation-for="ClientSecret"></span>
        <span class="hint">@T["The '{0}' assigned by the identity provider.", "client_secret"]</span>
    </div>
</div>

<div class="mb-4">
    <h3>@T["Implicit Authentication Flow"]</h3>
    <p>@T["Click <a href=\"{0}\" target=\"_blank\">here</a> for more information about the Implicit Flow.", "http://openid.net/specs/openid-connect-core-1_0.html#ImplicitFlowAuth"]</p>

    <div class="mb-3" asp-validation-class-for="UseIdTokenFlow">
        <div class="form-check">
            <input type="checkbox" class="form-check-input" asp-for="UseIdTokenFlow">
            <label class="form-check-label" asp-for="UseIdTokenFlow">@T["Use <code>{0}</code> response type", "id_token"]</label>
            <span class="hint dashed">@T["Click <a href=\"{0}\" target=\"_blank\">here</a> for an example.", "http://openid.net/specs/openid-connect-core-1_0.html#id_tokenExample"]</span>
        </div>
    </div>

    <div class="mb-3" asp-validation-class-for="UseIdTokenTokenFlow">
        <div class="form-check">
            <input type="checkbox" class="form-check-input" asp-for="UseIdTokenTokenFlow">
            <label class="form-check-label" asp-for="UseIdTokenTokenFlow">@T["Use <code>{0}</code> response type", "id_token token"]</label>
            <span class="hint dashed">@T["Click <a href=\"{0}\" target=\"_blank\">here</a> for an example.", "http://openid.net/specs/openid-connect-core-1_0.html#id_token-tokenExample"]</span>
        </div>
    </div>

    <div class="mb-3" asp-validation-class-for="ResponseMode">
        <label asp-for="ResponseMode" class="form-label">@T["Response Mode"]</label>
        <select asp-for="ResponseMode" class="form-select">
            <option id="@OpenIdConnectResponseMode.FormPost" value="@OpenIdConnectResponseMode.FormPost">@T[OpenIdConnectResponseMode.FormPost]</option>
            <option id="@OpenIdConnectResponseMode.Query" value="@OpenIdConnectResponseMode.Query">@T[OpenIdConnectResponseMode.Query]</option>
        </select>
        <span asp-validation-for="ResponseMode"></span>
        <span class="hint">@T["Configure Response Mode. Click <a href=\"{0}\" target=\"_blank\">here</a> for more info.", "http://openid.net/specs/openid-connect-core-1_0.html#ImplicitAuthResponse"]</span>
    </div>

    <script type="text/x-template" id="parameters-table">
        <table class="table table-bordered table-sm options-table">
            <thead class="thead-light">
                <tr>
                    <th scope="col">@T["Parameter Name"]</th>
                    <th scope="col" colspan="3">@T["Value"]</th>
                </tr>
            </thead>
            <draggable v-model="data.parameters" :tag="'tbody'">
                <tr v-for="(parameter, index) in data.parameters" :key="index">
                    <td>
                        <input type="text" class="form-control" v-model="parameter.name" placeholder="Enter a parameter" />
                    </td>
                    <td>
                        <input type="text" class="form-control courrier" v-model="parameter.value" placeholder="Enter a value" />
                    </td>
                    <td class="text-center">
                        <a v-on:click="remove(index)" href="javascript:void(0)" title="@T["Remove parameter from list"]" class="btn">
                            <i class="fa-solid fa-times" aria-hidden="true"></i>
                        </a>
                    </td>
                    <td class="text-center"><div class="btn cursor-move"><i class="fa-solid fa-arrows-alt" aria-hidden="true"></i></div></td>
                </tr>
            </draggable>
            <tfoot>
                <tr>
                    <td class="col-sm-12 text-center" colspan="5">
                        <a v-on:click="add()" class="btn btn-light w-100 btn-sm"><i class="fa-solid fa-plus small" aria-hidden="true"></i> @T["Add a parameter"]</a>
                        <input class="form-control" id="@Html.IdFor(m => m.Parameters)" name="@Html.NameFor(m => m.Parameters)" type="hidden" v-bind:value="getParametersFormattedList()" />
                    </td>
                </tr>
            </tfoot>
        </table>
    </script>

    <script type="text/x-template" id="parameters-modal">
        <div class="modal fade @Html.IdFor(m => m)-ModalBody text-start" role="dialog" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">@T["Edit Data"]</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="parameters-textarea" class="form-label">@T["Parameters"]</label>
                            <textarea id="parameters-textarea" name="parameters-textarea" rows="8" class="form-control" v-bind:value="JSON.stringify(data.parameters)" v-on:input="data.parameters = JSON.parse($event.target.value)"></textarea>
                            <span class="hint">@T["A JSON representation of the allowed values, e.g. {0}", "[ { name: 'First parameter', value: 'parameter1' }, { name: 'Second parameter', value: 'parameter2' } ]"]</span>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary btn-submit" v-on:click="closeModal()">@T["OK"]</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@T["Cancel"]</button>
                    </div>
                </div>
            </div>
        </div>
    </script>

    <div id="@Html.IdFor(m => m)" class="field-editor field-editor-parameters">
        <div class="row mb-3">
            <div class="col-12 col-lg-6">
                <label asp-for="Parameters" class="form-label">@T["Advanced Parameters"]</label>
                <a href="javascript:void(0)" v-on:click="showModal" class="float-end" title="@T["Edit Data"]"><i class="fa-solid fa-edit" aria-hidden="true"></i></a>
                <parameters-table :data="sharedState"></parameters-table>
                <parameters-modal :data="sharedState" v-on:reload-data="reloadData()"></parameters-modal>
                <div class="hint">@T["Advanced parameters that can be sent with the authorization request."]</div>
            </div>
        </div>
    </div>
</div>

<script at="Foot">
    ////<![CDATA[
    window.onload = function () {
        refreshFlows();

        $("#@Html.IdFor(m => m.ResponseMode), #@Html.IdFor(m => m.UseCodeFlow), #@Html.IdFor(m => m.UseCodeIdTokenFlow),#@Html.IdFor(m => m.UseCodeTokenFlow), #@Html.IdFor(m => m.UseCodeIdTokenTokenFlow), #@Html.IdFor(m => m.UseIdTokenFlow),#@Html.IdFor(m => m.UseIdTokenTokenFlow)").change(function () {
            if (this != @Html.IdFor(m => m.ResponseMode)) {
                $('input[type="checkbox"]').not(this).not(@Html.IdFor(m => m.StoreExternalTokens)).prop('checked', false);
            } else {
                $('input[type="checkbox"]').not(@Html.IdFor(m => m.UseCodeFlow)).not(@Html.IdFor(m => m.StoreExternalTokens)).prop('checked', false);
            }
            refreshFlows();
        });
        function refreshFlows(e) {
            var useCodeFlowElement = $("#@Html.IdFor(m => m.UseCodeFlow)");
            var useCodeIdTokenFlowElement = $("#@Html.IdFor(m => m.UseCodeIdTokenFlow)");
            var useCodeIdTokenTokenFlowElement = $("#@Html.IdFor(m => m.UseCodeIdTokenTokenFlow)");
            var useCodeTokenFlowElement = $("#@Html.IdFor(m => m.UseCodeTokenFlow)");
            var useIdTokenFlowElement = $("#@Html.IdFor(m => m.UseIdTokenFlow)");
            var useIdTokenTokenFlowElement = $("#@Html.IdFor(m => m.UseIdTokenTokenFlow)");

            var responseModeElement = $("#@Html.IdFor(m => m.ResponseMode)");

            var clientSecretElement = $("#@Html.IdFor(m => m.ClientSecret)");

            var queryOptionElement = $("#@OpenIdConnectResponseMode.Query");
            if (useCodeFlowElement.prop("checked")) {
                queryOptionElement.removeAttr("disabled");
            } else {
                queryOptionElement.prop("disabled", 'disabled');
                responseModeElement.prop("value", "@OpenIdConnectResponseMode.FormPost");
            }

            var showSecret = useCodeFlowElement.prop("checked") || useCodeIdTokenFlowElement.prop("checked") ||
                useCodeIdTokenTokenFlowElement.prop("checked") || useCodeTokenFlowElement.prop("checked");

            if (showSecret) {
                clientSecretElement.parent().collapse("show");
            } else {
                clientSecretElement.parent().collapse("hide");
            }

        }
    };
    //]]>
</script>
