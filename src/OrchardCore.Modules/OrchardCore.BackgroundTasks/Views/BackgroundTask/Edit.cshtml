@using OrchardCore
@model BackgroundTaskViewModel

<zone Name="Title"><h1>@RenderTitleSegments(T["Edit Task Settings"])</h1></zone>

<div asp-validation-summary="ModelOnly"></div>
<form asp-action="Edit" method="post" class="no-multisubmit">
    <input asp-for="DefaultSchedule" class="form-control" type="hidden" />

    <ul class="nav nav-tabs">
        <li class="nav-item pe-md-2">
            <a class="nav-link active" id="properties-tab" data-bs-toggle="tab" href="#properties" role="tab" aria-controls="site" aria-selected="true">@T["Properties"]</a>
        </li>
        <li class="nav-item pe-md-2">
            <a class="nav-link" id="advanced-tab" data-bs-toggle="tab" href="#advanced" role="tab" aria-controls="resources">@T["Advanced"]</a>
        </li>
    </ul>

    <div class="tab-content" id="tabs">
        <div class="tab-pane fade show active" id="properties" role="tabpanel" aria-labelledby="properties-tab">

            <div class="@Orchard.GetWrapperClasses()" asp-validation-class-for="Title">
                <label asp-for="Title" class="@Orchard.GetLabelClasses()">@T["Title"]</label>
                <div class="@Orchard.GetEndClasses()">
                    <input asp-for="Title" class="form-control-plaintext" readonly />
                </div>
            </div>

            <div class="@Orchard.GetWrapperClasses()" asp-validation-class-for="Description">
                <label asp-for="Description" class="@Orchard.GetLabelClasses()">@T["Description"]</label>
                <div class="@Orchard.GetEndClasses()">
                    <input asp-for="Description" class="form-control-plaintext" />
                </div>
            </div>

            <div class="@Orchard.GetWrapperClasses()" asp-validation-class-for="Schedule">
                <label asp-for="Schedule" class="@Orchard.GetLabelClasses()">@T["Schedule"]</label>
                <div class="@Orchard.GetEndClasses()">
                    <div class="input-group mb-3">
                        <input asp-for="Schedule" class="form-control" />
                        <button id="use-default-schedule" class="btn btn-outline-success">@T["Reset Schedule"]</button>
                    </div>
                    <span class="hint">@T["The task schedule as a cron expression."]</span>
                </div>
            </div>

            <div class="@Orchard.GetWrapperClasses()">
                <div class="@Orchard.GetEndClasses(true)">
                    <div class="form-check">
                        <input type="checkbox" class="form-check-input" asp-for="UsePipeline" checked="@Model.UsePipeline" />
                        <label class="form-check-label" asp-for="UsePipeline">@T["Use Tenant Pipeline"]</label>
                    </div>
                    <span class="hint">@T["Whether or not the tenant pipeline should be built to configure endpoints and then executed to allow route urls generation in the background."]</span>
                </div>
            </div>

            <div><span asp-validation-for="LockTimeout" class="text-danger">@T["Invalid lock timeout value in the advanced tab"]</span></div>
            <div><span asp-validation-for="LockExpiration" class="text-danger">@T["Invalid lock expiration value in the advanced tab"]</span></div>
        </div>

        <div class="tab-pane fade" id="advanced" role="tabpanel" aria-labelledby="advanced-tab">
            <div class="@Orchard.GetWrapperClasses()" asp-validation-class-for="LockTimeout">
                <label asp-for="LockTimeout" class="@Orchard.GetLabelClasses()">@T["Lock timeout (ms)"]</label>
                <div class="@Orchard.GetEndClasses()">
                    <input asp-for="LockTimeout" type="number" min="0" max="30000" class="form-control">
                    <span class="hint">@T["The timeout in milliseconds to acquire a lock before executing the task atomically. Leave it to zero to not use any locking."]</span>
                    <span class="hint">@T["Ignored if there is no distributed lock feature enabled."]</span>
                </div>
            </div>

            <div class="@Orchard.GetWrapperClasses()" asp-validation-class-for="LockExpiration">
                <label asp-for="LockExpiration" class="@Orchard.GetLabelClasses()">@T["Lock expiration (ms)"]</label>
                <div class="@Orchard.GetEndClasses()">
                    <input asp-for="LockExpiration" type="number" min="0" max="30000" class="form-control">
                    <span class="hint">@T["The expiration in milliseconds of the lock acquired before executing the task atomically. Leave it to zero to not use any locking."]</span>
                    <span class="hint">@T["Ignored if there is no distributed lock feature enabled."]</span>
                </div>
            </div>
        </div>
    </div>

    <div class="mb-3">
        <button class="btn btn-primary save" type="submit">@T["Save"]</button>
        <a class="btn btn-secondary cancel" role="button" asp-route-action="Index">@T["Cancel"]</a>
    </div>
</form>

<script at="Foot">
    document.addEventListener('DOMContentLoaded', function () {
        document.getElementById('use-default-schedule').addEventListener('click', function (e) {
            e.preventDefault();
            document.getElementById('@Html.IdFor(x => x.Schedule)').value = document.getElementById('@Html.IdFor(x => x.DefaultSchedule)').value;
        });
    })
</script>
