@model IndexInfoViewModel

<h2>@T["Elasticsearch index information"]</h2>

<div class="row">
    <div class="col">
        <div class="mb-4">
            <label asp-for="IndexInfo" class="form-label">@T["Info for: "]@Model.IndexName</label>
            <div class="form-control" style="min-height: 400px;">
                <div id="@Html.IdFor(x => x.IndexInfo)_editor" style="min-height: 385px;" dir="@Orchard.CultureDir()" data-schema='@Model.IndexInfo'></div>
            </div>
            <textarea asp-for="IndexInfo" hidden></textarea>
            <span class="hint">@T["The Elasticsearch index information. For reference only."]</span>
        </div>
    </div>
</div>

<script at="Foot" asp-name="jsonrecipe-editor" depends-on="monaco, admin">
    $(document).ready(function () {
        require(['vs/editor/editor.main'], function () {

            var html = document.documentElement;
            const mutationObserver = new MutationObserver(setTheme);
            mutationObserver.observe(html, { attributes: true });

            function setTheme() {
                var theme = html.dataset.bsTheme;
                if (theme === 'dark' || (theme === 'auto' && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
                    monaco.editor.setTheme('vs-dark')
                } else {
                    monaco.editor.setTheme('vs')
                }
            }

            setTheme();

            var modelUri = monaco.Uri.parse("x://orchardcore.search.elastic.mappings.json");
            var editor = document.getElementById('@Html.IdFor(x => x.IndexInfo)_editor');
            var textArea = document.getElementById('@Html.IdFor(x => x.IndexInfo)');
            var schema = JSON.parse(editor.dataset.schema)
            var model = monaco.editor.createModel(textArea.value, "json", modelUri);

            monaco.languages.json.jsonDefaults.setDiagnosticsOptions({
                validate: true,
                schemas: [{
                    uri: "x://orchardcore.search.elastic.mappings.schema.json",
                    fileMatch: [modelUri.toString()],
                    schema: schema
                }]
            });

            var editor = monaco.editor.create(editor, {
                model: model
            });

            window.addEventListener("submit", function () {
                textArea.value = editor.getValue();
            });
        });
    });
</script>