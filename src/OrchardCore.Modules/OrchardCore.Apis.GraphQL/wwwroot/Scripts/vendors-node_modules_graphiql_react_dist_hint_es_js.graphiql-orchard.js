"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_orchardcore_root"] = self["webpackChunk_orchardcore_root"] || []).push([["vendors-node_modules_graphiql_react_dist_hint_es_js"],{

/***/ "./node_modules/@graphiql/react/dist/hint.es.js":
/*!******************************************************!*\
  !*** ./node_modules/@graphiql/react/dist/hint.es.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _codemirror_es_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./codemirror.es.js */ \"./node_modules/@graphiql/react/dist/codemirror.es.js\");\n/* harmony import */ var _show_hint_es_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./show-hint.es.js */ \"./node_modules/@graphiql/react/dist/show-hint.es.js\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! graphql */ \"./node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! graphql */ \"./node_modules/graphql/language/visitor.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! graphql */ \"./node_modules/graphql/language/parser.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! graphql */ \"./node_modules/graphql/type/introspection.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! graphql */ \"./node_modules/graphql/type/scalars.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! graphql */ \"./node_modules/graphql/utilities/typeComparators.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! graphql */ \"./node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! graphql */ \"./node_modules/graphql/language/directiveLocation.mjs\");\n/* harmony import */ var _index_es_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index.es.js */ \"./node_modules/@graphiql/react/dist/index.es.js\");\n/* harmony import */ var _Range_es_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Range.es.js */ \"./node_modules/@graphiql/react/dist/Range.es.js\");\n/* harmony import */ var _onlineParser_es_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./onlineParser.es.js */ \"./node_modules/@graphiql/react/dist/onlineParser.es.js\");\n/* harmony import */ var _introspection_es_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./introspection.es.js */ \"./node_modules/@graphiql/react/dist/introspection.es.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react-dom */ \"./node_modules/react-dom/index.js\");\nvar __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\n\n\n\n\n\n\n\n\n\nfunction getDefinitionState(tokenState) {\n  let definitionState;\n  forEachState(tokenState, (state) => {\n    switch (state.kind) {\n      case \"Query\":\n      case \"ShortQuery\":\n      case \"Mutation\":\n      case \"Subscription\":\n      case \"FragmentDefinition\":\n        definitionState = state;\n        break;\n    }\n  });\n  return definitionState;\n}\n__name(getDefinitionState, \"getDefinitionState\");\nfunction getFieldDef(schema, type, fieldName) {\n  if (fieldName === _introspection_es_js__WEBPACK_IMPORTED_MODULE_5__.S.name && schema.getQueryType() === type) {\n    return _introspection_es_js__WEBPACK_IMPORTED_MODULE_5__.S;\n  }\n  if (fieldName === _introspection_es_js__WEBPACK_IMPORTED_MODULE_5__.T.name && schema.getQueryType() === type) {\n    return _introspection_es_js__WEBPACK_IMPORTED_MODULE_5__.T;\n  }\n  if (fieldName === _introspection_es_js__WEBPACK_IMPORTED_MODULE_5__.a.name && (0,graphql__WEBPACK_IMPORTED_MODULE_8__.isCompositeType)(type)) {\n    return _introspection_es_js__WEBPACK_IMPORTED_MODULE_5__.a;\n  }\n  if (\"getFields\" in type) {\n    return type.getFields()[fieldName];\n  }\n  return null;\n}\n__name(getFieldDef, \"getFieldDef\");\nfunction forEachState(stack, fn) {\n  const reverseStateStack = [];\n  let state = stack;\n  while (state === null || state === void 0 ? void 0 : state.kind) {\n    reverseStateStack.push(state);\n    state = state.prevState;\n  }\n  for (let i = reverseStateStack.length - 1; i >= 0; i--) {\n    fn(reverseStateStack[i]);\n  }\n}\n__name(forEachState, \"forEachState\");\nfunction objectValues(object) {\n  const keys = Object.keys(object);\n  const len = keys.length;\n  const values = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    values[i] = object[keys[i]];\n  }\n  return values;\n}\n__name(objectValues, \"objectValues\");\nfunction hintList(token, list) {\n  return filterAndSortList(list, normalizeText(token.string));\n}\n__name(hintList, \"hintList\");\nfunction filterAndSortList(list, text) {\n  if (!text) {\n    return filterNonEmpty(list, (entry) => !entry.isDeprecated);\n  }\n  const byProximity = list.map((entry) => ({\n    proximity: getProximity(normalizeText(entry.label), text),\n    entry\n  }));\n  return filterNonEmpty(filterNonEmpty(byProximity, (pair) => pair.proximity <= 2), (pair) => !pair.entry.isDeprecated).sort((a, b) => (a.entry.isDeprecated ? 1 : 0) - (b.entry.isDeprecated ? 1 : 0) || a.proximity - b.proximity || a.entry.label.length - b.entry.label.length).map((pair) => pair.entry);\n}\n__name(filterAndSortList, \"filterAndSortList\");\nfunction filterNonEmpty(array, predicate) {\n  const filtered = array.filter(predicate);\n  return filtered.length === 0 ? array : filtered;\n}\n__name(filterNonEmpty, \"filterNonEmpty\");\nfunction normalizeText(text) {\n  return text.toLowerCase().replace(/\\W/g, \"\");\n}\n__name(normalizeText, \"normalizeText\");\nfunction getProximity(suggestion, text) {\n  let proximity = lexicalDistance(text, suggestion);\n  if (suggestion.length > text.length) {\n    proximity -= suggestion.length - text.length - 1;\n    proximity += suggestion.indexOf(text) === 0 ? 0 : 0.5;\n  }\n  return proximity;\n}\n__name(getProximity, \"getProximity\");\nfunction lexicalDistance(a, b) {\n  let i;\n  let j;\n  const d = [];\n  const aLength = a.length;\n  const bLength = b.length;\n  for (i = 0; i <= aLength; i++) {\n    d[i] = [i];\n  }\n  for (j = 1; j <= bLength; j++) {\n    d[0][j] = j;\n  }\n  for (i = 1; i <= aLength; i++) {\n    for (j = 1; j <= bLength; j++) {\n      const cost = a[i - 1] === b[j - 1] ? 0 : 1;\n      d[i][j] = Math.min(d[i - 1][j] + 1, d[i][j - 1] + 1, d[i - 1][j - 1] + cost);\n      if (i > 1 && j > 1 && a[i - 1] === b[j - 2] && a[i - 2] === b[j - 1]) {\n        d[i][j] = Math.min(d[i][j], d[i - 2][j - 2] + cost);\n      }\n    }\n  }\n  return d[aLength][bLength];\n}\n__name(lexicalDistance, \"lexicalDistance\");\nconst SuggestionCommand = {\n  command: \"editor.action.triggerSuggest\",\n  title: \"Suggestions\"\n};\nconst collectFragmentDefs = /* @__PURE__ */ __name((op) => {\n  const externalFragments = [];\n  if (op) {\n    try {\n      (0,graphql__WEBPACK_IMPORTED_MODULE_9__.visit)((0,graphql__WEBPACK_IMPORTED_MODULE_10__.parse)(op), {\n        FragmentDefinition(def) {\n          externalFragments.push(def);\n        }\n      });\n    } catch (_a) {\n      return [];\n    }\n  }\n  return externalFragments;\n}, \"collectFragmentDefs\");\nfunction getAutocompleteSuggestions(schema, queryText, cursor, contextToken, fragmentDefs, options) {\n  var _a;\n  const opts = Object.assign(Object.assign({}, options), { schema });\n  const token = contextToken || getTokenAtPosition(queryText, cursor);\n  const state = token.state.kind === \"Invalid\" ? token.state.prevState : token.state;\n  if (!state) {\n    return [];\n  }\n  const kind = state.kind;\n  const step = state.step;\n  const typeInfo = getTypeInfo(schema, token.state);\n  if (kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.DOCUMENT) {\n    return hintList(token, [\n      { label: \"query\", kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Function },\n      { label: \"mutation\", kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Function },\n      { label: \"subscription\", kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Function },\n      { label: \"fragment\", kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Function },\n      { label: \"{\", kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Constructor }\n    ]);\n  }\n  if (kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.IMPLEMENTS || kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.NAMED_TYPE && ((_a = state.prevState) === null || _a === void 0 ? void 0 : _a.kind) === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.IMPLEMENTS) {\n    return getSuggestionsForImplements(token, state, schema, queryText, typeInfo);\n  }\n  if (kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.SELECTION_SET || kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.FIELD || kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.ALIASED_FIELD) {\n    return getSuggestionsForFieldNames(token, typeInfo, opts);\n  }\n  if (kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.ARGUMENTS || kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.ARGUMENT && step === 0) {\n    const argDefs = typeInfo.argDefs;\n    if (argDefs) {\n      return hintList(token, argDefs.map((argDef) => {\n        var _a2;\n        return {\n          label: argDef.name,\n          insertText: argDef.name + \": \",\n          command: SuggestionCommand,\n          detail: String(argDef.type),\n          documentation: (_a2 = argDef.description) !== null && _a2 !== void 0 ? _a2 : void 0,\n          kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Variable,\n          type: argDef.type\n        };\n      }));\n    }\n  }\n  if (kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.OBJECT_VALUE || kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.OBJECT_FIELD && step === 0) {\n    if (typeInfo.objectFieldDefs) {\n      const objectFields = objectValues(typeInfo.objectFieldDefs);\n      const completionKind = kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.OBJECT_VALUE ? _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Value : _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Field;\n      return hintList(token, objectFields.map((field) => {\n        var _a2;\n        return {\n          label: field.name,\n          detail: String(field.type),\n          documentation: (_a2 = field.description) !== null && _a2 !== void 0 ? _a2 : void 0,\n          kind: completionKind,\n          type: field.type\n        };\n      }));\n    }\n  }\n  if (kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.ENUM_VALUE || kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.LIST_VALUE && step === 1 || kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.OBJECT_FIELD && step === 2 || kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.ARGUMENT && step === 2) {\n    return getSuggestionsForInputValues(token, typeInfo, queryText, schema);\n  }\n  if (kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.VARIABLE && step === 1) {\n    const namedInputType = (0,graphql__WEBPACK_IMPORTED_MODULE_8__.getNamedType)(typeInfo.inputType);\n    const variableDefinitions = getVariableCompletions(queryText, schema, token);\n    return hintList(token, variableDefinitions.filter((v) => v.detail === (namedInputType === null || namedInputType === void 0 ? void 0 : namedInputType.name)));\n  }\n  if (kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.TYPE_CONDITION && step === 1 || kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.NAMED_TYPE && state.prevState != null && state.prevState.kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.TYPE_CONDITION) {\n    return getSuggestionsForFragmentTypeConditions(token, typeInfo, schema);\n  }\n  if (kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.FRAGMENT_SPREAD && step === 1) {\n    return getSuggestionsForFragmentSpread(token, typeInfo, schema, queryText, Array.isArray(fragmentDefs) ? fragmentDefs : collectFragmentDefs(fragmentDefs));\n  }\n  if (kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.VARIABLE_DEFINITION && step === 2 || kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.LIST_TYPE && step === 1 || kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.NAMED_TYPE && state.prevState && (state.prevState.kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.VARIABLE_DEFINITION || state.prevState.kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.LIST_TYPE || state.prevState.kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.NON_NULL_TYPE)) {\n    return getSuggestionsForVariableDefinition(token, schema);\n  }\n  if (kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.DIRECTIVE) {\n    return getSuggestionsForDirective(token, state, schema);\n  }\n  return [];\n}\n__name(getAutocompleteSuggestions, \"getAutocompleteSuggestions\");\nconst insertSuffix = ` {\n  $1\n}`;\nconst getInsertText = /* @__PURE__ */ __name((field) => {\n  const type = field.type;\n  if ((0,graphql__WEBPACK_IMPORTED_MODULE_8__.isCompositeType)(type)) {\n    return insertSuffix;\n  }\n  if ((0,graphql__WEBPACK_IMPORTED_MODULE_8__.isListType)(type) && (0,graphql__WEBPACK_IMPORTED_MODULE_8__.isCompositeType)(type.ofType)) {\n    return insertSuffix;\n  }\n  if ((0,graphql__WEBPACK_IMPORTED_MODULE_8__.isNonNullType)(type)) {\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_8__.isCompositeType)(type.ofType)) {\n      return insertSuffix;\n    }\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_8__.isListType)(type.ofType) && (0,graphql__WEBPACK_IMPORTED_MODULE_8__.isCompositeType)(type.ofType.ofType)) {\n      return insertSuffix;\n    }\n  }\n  return null;\n}, \"getInsertText\");\nfunction getSuggestionsForFieldNames(token, typeInfo, options) {\n  var _a;\n  if (typeInfo.parentType) {\n    const parentType = typeInfo.parentType;\n    let fields = [];\n    if (\"getFields\" in parentType) {\n      fields = objectValues(parentType.getFields());\n    }\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_8__.isCompositeType)(parentType)) {\n      fields.push(graphql__WEBPACK_IMPORTED_MODULE_11__.TypeNameMetaFieldDef);\n    }\n    if (parentType === ((_a = options === null || options === void 0 ? void 0 : options.schema) === null || _a === void 0 ? void 0 : _a.getQueryType())) {\n      fields.push(graphql__WEBPACK_IMPORTED_MODULE_11__.SchemaMetaFieldDef, graphql__WEBPACK_IMPORTED_MODULE_11__.TypeMetaFieldDef);\n    }\n    return hintList(token, fields.map((field, index) => {\n      var _a2;\n      const suggestion = {\n        sortText: String(index) + field.name,\n        label: field.name,\n        detail: String(field.type),\n        documentation: (_a2 = field.description) !== null && _a2 !== void 0 ? _a2 : void 0,\n        deprecated: Boolean(field.deprecationReason),\n        isDeprecated: Boolean(field.deprecationReason),\n        deprecationReason: field.deprecationReason,\n        kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Field,\n        type: field.type\n      };\n      const insertText = getInsertText(field);\n      if (insertText) {\n        suggestion.insertText = field.name + insertText;\n        suggestion.insertTextFormat = _index_es_js__WEBPACK_IMPORTED_MODULE_2__.I.Snippet;\n        suggestion.command = SuggestionCommand;\n      }\n      return suggestion;\n    }));\n  }\n  return [];\n}\n__name(getSuggestionsForFieldNames, \"getSuggestionsForFieldNames\");\nfunction getSuggestionsForInputValues(token, typeInfo, queryText, schema) {\n  const namedInputType = (0,graphql__WEBPACK_IMPORTED_MODULE_8__.getNamedType)(typeInfo.inputType);\n  const queryVariables = getVariableCompletions(queryText, schema, token).filter((v) => v.detail === namedInputType.name);\n  if (namedInputType instanceof graphql__WEBPACK_IMPORTED_MODULE_8__.GraphQLEnumType) {\n    const values = namedInputType.getValues();\n    return hintList(token, values.map((value) => {\n      var _a;\n      return {\n        label: value.name,\n        detail: String(namedInputType),\n        documentation: (_a = value.description) !== null && _a !== void 0 ? _a : void 0,\n        deprecated: Boolean(value.deprecationReason),\n        isDeprecated: Boolean(value.deprecationReason),\n        deprecationReason: value.deprecationReason,\n        kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.EnumMember,\n        type: namedInputType\n      };\n    }).concat(queryVariables));\n  } else if (namedInputType === graphql__WEBPACK_IMPORTED_MODULE_12__.GraphQLBoolean) {\n    return hintList(token, queryVariables.concat([\n      {\n        label: \"true\",\n        detail: String(graphql__WEBPACK_IMPORTED_MODULE_12__.GraphQLBoolean),\n        documentation: \"Not false.\",\n        kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Variable,\n        type: graphql__WEBPACK_IMPORTED_MODULE_12__.GraphQLBoolean\n      },\n      {\n        label: \"false\",\n        detail: String(graphql__WEBPACK_IMPORTED_MODULE_12__.GraphQLBoolean),\n        documentation: \"Not true.\",\n        kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Variable,\n        type: graphql__WEBPACK_IMPORTED_MODULE_12__.GraphQLBoolean\n      }\n    ]));\n  }\n  return queryVariables;\n}\n__name(getSuggestionsForInputValues, \"getSuggestionsForInputValues\");\nfunction getSuggestionsForImplements(token, tokenState, schema, documentText, typeInfo) {\n  if (tokenState.needsSeparator) {\n    return [];\n  }\n  const typeMap = schema.getTypeMap();\n  const schemaInterfaces = objectValues(typeMap).filter(graphql__WEBPACK_IMPORTED_MODULE_8__.isInterfaceType);\n  const schemaInterfaceNames = schemaInterfaces.map(({ name }) => name);\n  const inlineInterfaces = /* @__PURE__ */ new Set();\n  runOnlineParser(documentText, (_, state) => {\n    var _a, _b, _c, _d, _e;\n    if (state.name) {\n      if (state.kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.INTERFACE_DEF && !schemaInterfaceNames.includes(state.name)) {\n        inlineInterfaces.add(state.name);\n      }\n      if (state.kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.NAMED_TYPE && ((_a = state.prevState) === null || _a === void 0 ? void 0 : _a.kind) === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.IMPLEMENTS) {\n        if (typeInfo.interfaceDef) {\n          const existingType = (_b = typeInfo.interfaceDef) === null || _b === void 0 ? void 0 : _b.getInterfaces().find(({ name }) => name === state.name);\n          if (existingType) {\n            return;\n          }\n          const type = schema.getType(state.name);\n          const interfaceConfig = (_c = typeInfo.interfaceDef) === null || _c === void 0 ? void 0 : _c.toConfig();\n          typeInfo.interfaceDef = new graphql__WEBPACK_IMPORTED_MODULE_8__.GraphQLInterfaceType(Object.assign(Object.assign({}, interfaceConfig), { interfaces: [\n            ...interfaceConfig.interfaces,\n            type || new graphql__WEBPACK_IMPORTED_MODULE_8__.GraphQLInterfaceType({ name: state.name, fields: {} })\n          ] }));\n        } else if (typeInfo.objectTypeDef) {\n          const existingType = (_d = typeInfo.objectTypeDef) === null || _d === void 0 ? void 0 : _d.getInterfaces().find(({ name }) => name === state.name);\n          if (existingType) {\n            return;\n          }\n          const type = schema.getType(state.name);\n          const objectTypeConfig = (_e = typeInfo.objectTypeDef) === null || _e === void 0 ? void 0 : _e.toConfig();\n          typeInfo.objectTypeDef = new graphql__WEBPACK_IMPORTED_MODULE_8__.GraphQLObjectType(Object.assign(Object.assign({}, objectTypeConfig), { interfaces: [\n            ...objectTypeConfig.interfaces,\n            type || new graphql__WEBPACK_IMPORTED_MODULE_8__.GraphQLInterfaceType({ name: state.name, fields: {} })\n          ] }));\n        }\n      }\n    }\n  });\n  const currentTypeToExtend = typeInfo.interfaceDef || typeInfo.objectTypeDef;\n  const siblingInterfaces = (currentTypeToExtend === null || currentTypeToExtend === void 0 ? void 0 : currentTypeToExtend.getInterfaces()) || [];\n  const siblingInterfaceNames = siblingInterfaces.map(({ name }) => name);\n  const possibleInterfaces = schemaInterfaces.concat([...inlineInterfaces].map((name) => ({ name }))).filter(({ name }) => name !== (currentTypeToExtend === null || currentTypeToExtend === void 0 ? void 0 : currentTypeToExtend.name) && !siblingInterfaceNames.includes(name));\n  return hintList(token, possibleInterfaces.map((type) => {\n    const result = {\n      label: type.name,\n      kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Interface,\n      type\n    };\n    if (type === null || type === void 0 ? void 0 : type.description) {\n      result.documentation = type.description;\n    }\n    return result;\n  }));\n}\n__name(getSuggestionsForImplements, \"getSuggestionsForImplements\");\nfunction getSuggestionsForFragmentTypeConditions(token, typeInfo, schema, _kind) {\n  let possibleTypes;\n  if (typeInfo.parentType) {\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_8__.isAbstractType)(typeInfo.parentType)) {\n      const abstractType = (0,graphql__WEBPACK_IMPORTED_MODULE_8__.assertAbstractType)(typeInfo.parentType);\n      const possibleObjTypes = schema.getPossibleTypes(abstractType);\n      const possibleIfaceMap = /* @__PURE__ */ Object.create(null);\n      possibleObjTypes.forEach((type) => {\n        type.getInterfaces().forEach((iface) => {\n          possibleIfaceMap[iface.name] = iface;\n        });\n      });\n      possibleTypes = possibleObjTypes.concat(objectValues(possibleIfaceMap));\n    } else {\n      possibleTypes = [typeInfo.parentType];\n    }\n  } else {\n    const typeMap = schema.getTypeMap();\n    possibleTypes = objectValues(typeMap).filter(graphql__WEBPACK_IMPORTED_MODULE_8__.isCompositeType);\n  }\n  return hintList(token, possibleTypes.map((type) => {\n    const namedType = (0,graphql__WEBPACK_IMPORTED_MODULE_8__.getNamedType)(type);\n    return {\n      label: String(type),\n      documentation: (namedType === null || namedType === void 0 ? void 0 : namedType.description) || \"\",\n      kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Field\n    };\n  }));\n}\n__name(getSuggestionsForFragmentTypeConditions, \"getSuggestionsForFragmentTypeConditions\");\nfunction getSuggestionsForFragmentSpread(token, typeInfo, schema, queryText, fragmentDefs) {\n  if (!queryText) {\n    return [];\n  }\n  const typeMap = schema.getTypeMap();\n  const defState = getDefinitionState(token.state);\n  const fragments = getFragmentDefinitions(queryText);\n  if (fragmentDefs && fragmentDefs.length > 0) {\n    fragments.push(...fragmentDefs);\n  }\n  const relevantFrags = fragments.filter((frag) => typeMap[frag.typeCondition.name.value] && !(defState && defState.kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.FRAGMENT_DEFINITION && defState.name === frag.name.value) && (0,graphql__WEBPACK_IMPORTED_MODULE_8__.isCompositeType)(typeInfo.parentType) && (0,graphql__WEBPACK_IMPORTED_MODULE_8__.isCompositeType)(typeMap[frag.typeCondition.name.value]) && (0,graphql__WEBPACK_IMPORTED_MODULE_13__.doTypesOverlap)(schema, typeInfo.parentType, typeMap[frag.typeCondition.name.value]));\n  return hintList(token, relevantFrags.map((frag) => ({\n    label: frag.name.value,\n    detail: String(typeMap[frag.typeCondition.name.value]),\n    documentation: `fragment ${frag.name.value} on ${frag.typeCondition.name.value}`,\n    kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Field,\n    type: typeMap[frag.typeCondition.name.value]\n  })));\n}\n__name(getSuggestionsForFragmentSpread, \"getSuggestionsForFragmentSpread\");\nconst getParentDefinition = /* @__PURE__ */ __name((state, kind) => {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n  if (((_a = state.prevState) === null || _a === void 0 ? void 0 : _a.kind) === kind) {\n    return state.prevState;\n  }\n  if (((_c = (_b = state.prevState) === null || _b === void 0 ? void 0 : _b.prevState) === null || _c === void 0 ? void 0 : _c.kind) === kind) {\n    return state.prevState.prevState;\n  }\n  if (((_f = (_e = (_d = state.prevState) === null || _d === void 0 ? void 0 : _d.prevState) === null || _e === void 0 ? void 0 : _e.prevState) === null || _f === void 0 ? void 0 : _f.kind) === kind) {\n    return state.prevState.prevState.prevState;\n  }\n  if (((_k = (_j = (_h = (_g = state.prevState) === null || _g === void 0 ? void 0 : _g.prevState) === null || _h === void 0 ? void 0 : _h.prevState) === null || _j === void 0 ? void 0 : _j.prevState) === null || _k === void 0 ? void 0 : _k.kind) === kind) {\n    return state.prevState.prevState.prevState.prevState;\n  }\n}, \"getParentDefinition\");\nfunction getVariableCompletions(queryText, schema, token) {\n  let variableName = null;\n  let variableType;\n  const definitions = /* @__PURE__ */ Object.create({});\n  runOnlineParser(queryText, (_, state) => {\n    if ((state === null || state === void 0 ? void 0 : state.kind) === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.VARIABLE && state.name) {\n      variableName = state.name;\n    }\n    if ((state === null || state === void 0 ? void 0 : state.kind) === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.NAMED_TYPE && variableName) {\n      const parentDefinition = getParentDefinition(state, _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.TYPE);\n      if (parentDefinition === null || parentDefinition === void 0 ? void 0 : parentDefinition.type) {\n        variableType = schema.getType(parentDefinition === null || parentDefinition === void 0 ? void 0 : parentDefinition.type);\n      }\n    }\n    if (variableName && variableType) {\n      if (!definitions[variableName]) {\n        definitions[variableName] = {\n          detail: variableType.toString(),\n          insertText: token.string === \"$\" ? variableName : \"$\" + variableName,\n          label: variableName,\n          type: variableType,\n          kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Variable\n        };\n        variableName = null;\n        variableType = null;\n      }\n    }\n  });\n  return objectValues(definitions);\n}\n__name(getVariableCompletions, \"getVariableCompletions\");\nfunction getFragmentDefinitions(queryText) {\n  const fragmentDefs = [];\n  runOnlineParser(queryText, (_, state) => {\n    if (state.kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.FRAGMENT_DEFINITION && state.name && state.type) {\n      fragmentDefs.push({\n        kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.FRAGMENT_DEFINITION,\n        name: {\n          kind: graphql__WEBPACK_IMPORTED_MODULE_14__.Kind.NAME,\n          value: state.name\n        },\n        selectionSet: {\n          kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.SELECTION_SET,\n          selections: []\n        },\n        typeCondition: {\n          kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.NAMED_TYPE,\n          name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_14__.Kind.NAME,\n            value: state.type\n          }\n        }\n      });\n    }\n  });\n  return fragmentDefs;\n}\n__name(getFragmentDefinitions, \"getFragmentDefinitions\");\nfunction getSuggestionsForVariableDefinition(token, schema, _kind) {\n  const inputTypeMap = schema.getTypeMap();\n  const inputTypes = objectValues(inputTypeMap).filter(graphql__WEBPACK_IMPORTED_MODULE_8__.isInputType);\n  return hintList(token, inputTypes.map((type) => ({\n    label: type.name,\n    documentation: type.description,\n    kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Variable\n  })));\n}\n__name(getSuggestionsForVariableDefinition, \"getSuggestionsForVariableDefinition\");\nfunction getSuggestionsForDirective(token, state, schema, _kind) {\n  var _a;\n  if ((_a = state.prevState) === null || _a === void 0 ? void 0 : _a.kind) {\n    const directives = schema.getDirectives().filter((directive) => canUseDirective(state.prevState, directive));\n    return hintList(token, directives.map((directive) => ({\n      label: directive.name,\n      documentation: directive.description || \"\",\n      kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Function\n    })));\n  }\n  return [];\n}\n__name(getSuggestionsForDirective, \"getSuggestionsForDirective\");\nfunction getTokenAtPosition(queryText, cursor) {\n  let styleAtCursor = null;\n  let stateAtCursor = null;\n  let stringAtCursor = null;\n  const token = runOnlineParser(queryText, (stream, state, style, index) => {\n    if (index === cursor.line) {\n      if (stream.getCurrentPosition() >= cursor.character) {\n        styleAtCursor = style;\n        stateAtCursor = Object.assign({}, state);\n        stringAtCursor = stream.current();\n        return \"BREAK\";\n      }\n    }\n  });\n  return {\n    start: token.start,\n    end: token.end,\n    string: stringAtCursor || token.string,\n    state: stateAtCursor || token.state,\n    style: styleAtCursor || token.style\n  };\n}\n__name(getTokenAtPosition, \"getTokenAtPosition\");\nfunction runOnlineParser(queryText, callback) {\n  const lines = queryText.split(\"\\n\");\n  const parser = (0,_onlineParser_es_js__WEBPACK_IMPORTED_MODULE_4__.o)();\n  let state = parser.startState();\n  let style = \"\";\n  let stream = new _Range_es_js__WEBPACK_IMPORTED_MODULE_3__.C(\"\");\n  for (let i = 0; i < lines.length; i++) {\n    stream = new _Range_es_js__WEBPACK_IMPORTED_MODULE_3__.C(lines[i]);\n    while (!stream.eol()) {\n      style = parser.token(stream, state);\n      const code = callback(stream, state, style, i);\n      if (code === \"BREAK\") {\n        break;\n      }\n    }\n    callback(stream, state, style, i);\n    if (!state.kind) {\n      state = parser.startState();\n    }\n  }\n  return {\n    start: stream.getStartOfToken(),\n    end: stream.getCurrentPosition(),\n    string: stream.current(),\n    state,\n    style\n  };\n}\n__name(runOnlineParser, \"runOnlineParser\");\nfunction canUseDirective(state, directive) {\n  var _a;\n  if (!state || !state.kind) {\n    return false;\n  }\n  const kind = state.kind;\n  const locations = directive.locations;\n  switch (kind) {\n    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.QUERY:\n      return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__.DirectiveLocation.QUERY) !== -1;\n    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.MUTATION:\n      return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__.DirectiveLocation.MUTATION) !== -1;\n    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.SUBSCRIPTION:\n      return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__.DirectiveLocation.SUBSCRIPTION) !== -1;\n    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.FIELD:\n    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.ALIASED_FIELD:\n      return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__.DirectiveLocation.FIELD) !== -1;\n    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.FRAGMENT_DEFINITION:\n      return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__.DirectiveLocation.FRAGMENT_DEFINITION) !== -1;\n    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.FRAGMENT_SPREAD:\n      return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__.DirectiveLocation.FRAGMENT_SPREAD) !== -1;\n    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.INLINE_FRAGMENT:\n      return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__.DirectiveLocation.INLINE_FRAGMENT) !== -1;\n    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.SCHEMA_DEF:\n      return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__.DirectiveLocation.SCHEMA) !== -1;\n    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.SCALAR_DEF:\n      return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__.DirectiveLocation.SCALAR) !== -1;\n    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.OBJECT_TYPE_DEF:\n      return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__.DirectiveLocation.OBJECT) !== -1;\n    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.FIELD_DEF:\n      return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__.DirectiveLocation.FIELD_DEFINITION) !== -1;\n    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.INTERFACE_DEF:\n      return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__.DirectiveLocation.INTERFACE) !== -1;\n    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.UNION_DEF:\n      return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__.DirectiveLocation.UNION) !== -1;\n    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.ENUM_DEF:\n      return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__.DirectiveLocation.ENUM) !== -1;\n    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.ENUM_VALUE:\n      return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__.DirectiveLocation.ENUM_VALUE) !== -1;\n    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.INPUT_DEF:\n      return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__.DirectiveLocation.INPUT_OBJECT) !== -1;\n    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.INPUT_VALUE_DEF:\n      const prevStateKind = (_a = state.prevState) === null || _a === void 0 ? void 0 : _a.kind;\n      switch (prevStateKind) {\n        case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.ARGUMENTS_DEF:\n          return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__.DirectiveLocation.ARGUMENT_DEFINITION) !== -1;\n        case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.INPUT_DEF:\n          return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__.DirectiveLocation.INPUT_FIELD_DEFINITION) !== -1;\n      }\n  }\n  return false;\n}\n__name(canUseDirective, \"canUseDirective\");\nfunction getTypeInfo(schema, tokenState) {\n  let argDef;\n  let argDefs;\n  let directiveDef;\n  let enumValue;\n  let fieldDef;\n  let inputType;\n  let objectTypeDef;\n  let objectFieldDefs;\n  let parentType;\n  let type;\n  let interfaceDef;\n  forEachState(tokenState, (state) => {\n    var _a;\n    switch (state.kind) {\n      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.QUERY:\n      case \"ShortQuery\":\n        type = schema.getQueryType();\n        break;\n      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.MUTATION:\n        type = schema.getMutationType();\n        break;\n      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.SUBSCRIPTION:\n        type = schema.getSubscriptionType();\n        break;\n      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.INLINE_FRAGMENT:\n      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.FRAGMENT_DEFINITION:\n        if (state.type) {\n          type = schema.getType(state.type);\n        }\n        break;\n      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.FIELD:\n      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.ALIASED_FIELD: {\n        if (!type || !state.name) {\n          fieldDef = null;\n        } else {\n          fieldDef = parentType ? getFieldDef(schema, parentType, state.name) : null;\n          type = fieldDef ? fieldDef.type : null;\n        }\n        break;\n      }\n      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.SELECTION_SET:\n        parentType = (0,graphql__WEBPACK_IMPORTED_MODULE_8__.getNamedType)(type);\n        break;\n      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.DIRECTIVE:\n        directiveDef = state.name ? schema.getDirective(state.name) : null;\n        break;\n      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.INTERFACE_DEF:\n        if (state.name) {\n          objectTypeDef = null;\n          interfaceDef = new graphql__WEBPACK_IMPORTED_MODULE_8__.GraphQLInterfaceType({\n            name: state.name,\n            interfaces: [],\n            fields: {}\n          });\n        }\n        break;\n      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.OBJECT_TYPE_DEF:\n        if (state.name) {\n          interfaceDef = null;\n          objectTypeDef = new graphql__WEBPACK_IMPORTED_MODULE_8__.GraphQLObjectType({\n            name: state.name,\n            interfaces: [],\n            fields: {}\n          });\n        }\n        break;\n      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.ARGUMENTS: {\n        if (!state.prevState) {\n          argDefs = null;\n        } else {\n          switch (state.prevState.kind) {\n            case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.FIELD:\n              argDefs = fieldDef && fieldDef.args;\n              break;\n            case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.DIRECTIVE:\n              argDefs = directiveDef && directiveDef.args;\n              break;\n            case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.ALIASED_FIELD: {\n              const name = (_a = state.prevState) === null || _a === void 0 ? void 0 : _a.name;\n              if (!name) {\n                argDefs = null;\n                break;\n              }\n              const field = parentType ? getFieldDef(schema, parentType, name) : null;\n              if (!field) {\n                argDefs = null;\n                break;\n              }\n              argDefs = field.args;\n              break;\n            }\n            default:\n              argDefs = null;\n              break;\n          }\n        }\n        break;\n      }\n      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.ARGUMENT:\n        if (argDefs) {\n          for (let i = 0; i < argDefs.length; i++) {\n            if (argDefs[i].name === state.name) {\n              argDef = argDefs[i];\n              break;\n            }\n          }\n        }\n        inputType = argDef === null || argDef === void 0 ? void 0 : argDef.type;\n        break;\n      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.ENUM_VALUE:\n        const enumType = (0,graphql__WEBPACK_IMPORTED_MODULE_8__.getNamedType)(inputType);\n        enumValue = enumType instanceof graphql__WEBPACK_IMPORTED_MODULE_8__.GraphQLEnumType ? enumType.getValues().find((val) => val.value === state.name) : null;\n        break;\n      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.LIST_VALUE:\n        const nullableType = (0,graphql__WEBPACK_IMPORTED_MODULE_8__.getNullableType)(inputType);\n        inputType = nullableType instanceof graphql__WEBPACK_IMPORTED_MODULE_8__.GraphQLList ? nullableType.ofType : null;\n        break;\n      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.OBJECT_VALUE:\n        const objectType = (0,graphql__WEBPACK_IMPORTED_MODULE_8__.getNamedType)(inputType);\n        objectFieldDefs = objectType instanceof graphql__WEBPACK_IMPORTED_MODULE_8__.GraphQLInputObjectType ? objectType.getFields() : null;\n        break;\n      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.OBJECT_FIELD:\n        const objectField = state.name && objectFieldDefs ? objectFieldDefs[state.name] : null;\n        inputType = objectField === null || objectField === void 0 ? void 0 : objectField.type;\n        break;\n      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.NAMED_TYPE:\n        if (state.name) {\n          type = schema.getType(state.name);\n        }\n        break;\n    }\n  });\n  return {\n    argDef,\n    argDefs,\n    directiveDef,\n    enumValue,\n    fieldDef,\n    inputType,\n    objectFieldDefs,\n    parentType,\n    type,\n    interfaceDef,\n    objectTypeDef\n  };\n}\n__name(getTypeInfo, \"getTypeInfo\");\n_codemirror_es_js__WEBPACK_IMPORTED_MODULE_0__.C.registerHelper(\"hint\", \"graphql\", (editor, options) => {\n  const schema = options.schema;\n  if (!schema) {\n    return;\n  }\n  const cur = editor.getCursor();\n  const token = editor.getTokenAt(cur);\n  const tokenStart = token.type !== null && /\"|\\w/.test(token.string[0]) ? token.start : token.end;\n  const position = new _Range_es_js__WEBPACK_IMPORTED_MODULE_3__.P(cur.line, tokenStart);\n  const rawResults = getAutocompleteSuggestions(schema, editor.getValue(), position, token, options.externalFragments);\n  const results = {\n    list: rawResults.map((item) => ({\n      text: item.label,\n      type: item.type,\n      description: item.documentation,\n      isDeprecated: item.isDeprecated,\n      deprecationReason: item.deprecationReason\n    })),\n    from: { line: cur.line, ch: tokenStart },\n    to: { line: cur.line, ch: token.end }\n  };\n  if ((results === null || results === void 0 ? void 0 : results.list) && results.list.length > 0) {\n    results.from = _codemirror_es_js__WEBPACK_IMPORTED_MODULE_0__.C.Pos(results.from.line, results.from.ch);\n    results.to = _codemirror_es_js__WEBPACK_IMPORTED_MODULE_0__.C.Pos(results.to.line, results.to.ch);\n    _codemirror_es_js__WEBPACK_IMPORTED_MODULE_0__.C.signal(editor, \"hasCompletion\", editor, results, token);\n  }\n  return results;\n});\n\n\n//# sourceURL=webpack://@orchardcore/root/./node_modules/@graphiql/react/dist/hint.es.js?");

/***/ })

}]);