{"mappings":"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","sources":["src/OrchardCore.Modules/OrchardCore.Setup/Assets/ts/setup.ts","src/Frontend/components/password-strength.ts","node_modules/@parcel/transformer-js/src/esmodule-helpers.js"],"sourcesContent":["import strenght from \"@orchardcore/frontend/components/password-strength\";\r\n\r\n// Show or hide the connection string or table prefix section when the database provider is selected\r\nconst toggleConnectionStringAndPrefix = () => {\r\n    const selectedOption = document.querySelector(\r\n        \"#DatabaseProvider option:checked\"\r\n    );\r\n    if (selectedOption) {\r\n        const connectionString =\r\n            selectedOption\r\n                .getAttribute(\"data-connection-string\")\r\n                ?.toLowerCase() === \"true\";\r\n        const tablePrefix =\r\n            selectedOption.getAttribute(\"data-table-prefix\")?.toLowerCase() ===\r\n            \"true\";\r\n\r\n        const connectionStringElements =\r\n            document.querySelectorAll<HTMLDivElement>(\".connectionString\");\r\n        connectionStringElements.forEach(\r\n            (el) => (el.style.display = connectionString ? \"block\" : \"none\")\r\n        );\r\n\r\n        const tablePrefixElements =\r\n            document.querySelectorAll<HTMLDivElement>(\".tablePrefix\");\r\n        tablePrefixElements.forEach(\r\n            (el) => (el.style.display = tablePrefix ? \"block\" : \"none\")\r\n        );\r\n\r\n        document.querySelectorAll(\".pwd\").forEach((el) => {\r\n            if (connectionString) {\r\n                el.setAttribute(\"required\", \"required\");\r\n            } else {\r\n                el.removeAttribute(\"required\");\r\n            }\r\n        });\r\n\r\n        const connectionStringHint = document.getElementById(\r\n            \"connectionStringHint\"\r\n        );\r\n        if (connectionStringHint) {\r\n            connectionStringHint.textContent =\r\n                selectedOption.getAttribute(\"data-connection-string-sample\") ||\r\n                \"\";\r\n        }\r\n    }\r\n};\r\n\r\nconst refreshDescription = (target: Element) => {\r\n    const recipeName = target.getAttribute(\"data-recipe-name\");\r\n    const recipeDisplayName = target.getAttribute(\"data-recipe-display-name\");\r\n    const recipeDescription = target.getAttribute(\"data-recipe-description\");\r\n\r\n    const recipeButton = document.getElementById(\"recipeButton\");\r\n    const recipeNameInput = document.getElementById(\r\n        \"RecipeName\"\r\n    ) as HTMLInputElement;\r\n\r\n    if (recipeButton && recipeNameInput) {\r\n        recipeButton.textContent = recipeDisplayName || \"\";\r\n        recipeNameInput.value = recipeName || \"\";\r\n        recipeButton.setAttribute(\"title\", recipeDescription || \"\");\r\n        recipeButton.focus();\r\n    }\r\n};\r\n\r\nconst setLocalizationUrl = () => {\r\n    const culturesList = document.getElementById(\r\n        \"culturesList\"\r\n    ) as HTMLSelectElement;\r\n\r\n    culturesList.addEventListener(\"change\", () => {\r\n        const selectedOption = culturesList.options[culturesList.selectedIndex];\r\n        if (selectedOption) {\r\n            window.location.href = selectedOption.dataset.url || \"\";\r\n        }\r\n    });\r\n};\r\n\r\nconst togglePasswordVisibility = (\r\n    passwordCtl: HTMLInputElement | null,\r\n    togglePasswordCtl: HTMLElement | null\r\n) => {\r\n    if (!passwordCtl || !togglePasswordCtl) {\r\n        return;\r\n    }\r\n\r\n    // toggle the type attribute\r\n    const type =\r\n        passwordCtl.getAttribute(\"type\") === \"password\" ? \"text\" : \"password\";\r\n    passwordCtl.setAttribute(\"type\", type);\r\n\r\n    // toggle the eye slash icon\r\n    const icon = togglePasswordCtl.getElementsByClassName(\"icon\")[0];\r\n    if (icon) {\r\n        if (icon.getAttribute(\"data-icon\")) {\r\n            // if the icon is rendered as a svg\r\n            icon.setAttribute(\r\n                \"data-icon\",\r\n                type === \"password\" ? \"eye\" : \"eye-slash\"\r\n            );\r\n        } else {\r\n            // if the icon is still a <i> element\r\n            icon.classList.toggle(\"fa-eye\", type === \"password\");\r\n            icon.classList.toggle(\"fa-eye-slash\", type !== \"password\");\r\n        }\r\n    }\r\n};\r\n\r\nconst init = () => {\r\n    toggleConnectionStringAndPrefix();\r\n\r\n    // Show hide the connection string when a provider is selected\r\n    document\r\n        .getElementById(\"DatabaseProvider\")\r\n        ?.addEventListener(\"change\", function () {\r\n            toggleConnectionStringAndPrefix();\r\n        });\r\n\r\n    // Refresh the recipe description\r\n    document.querySelectorAll(\"#recipes div a\").forEach(function (element) {\r\n        element.addEventListener(\"click\", function () {\r\n            refreshDescription(this);\r\n        });\r\n    });\r\n\r\n    const passwordElement = <HTMLInputElement>(\r\n        document.getElementById(\"Password\")\r\n    );\r\n\r\n    const options = JSON.parse(passwordElement?.dataset.strength ?? \"\") ?? {\r\n        requiredLength: 6,\r\n        requiredUniqueChars: 1,\r\n        requireNonAlphanumeric: true,\r\n        requireLowercase: true,\r\n        requireUppercase: true,\r\n        requireDigit: true,\r\n    };\r\n\r\n    if (passwordElement) {\r\n        strenght(passwordElement, options);\r\n    }\r\n\r\n    if (passwordElement) {\r\n        passwordElement.addEventListener(\"focus\", function () {\r\n            const popover = document.createElement(\"div\");\r\n            popover.className = \"popover bs-popover-top\";\r\n            popover.role = \"tooltip\";\r\n            popover.innerHTML = `<div class=\"popover-header\">Password requirements: </div><div class=\"popover-body\"><ul><li>Minimum length: ${\r\n                options.requiredLength\r\n            }</li><li>Unique Chars: ${\r\n                options.requiredUniqueChars\r\n            }</li><li>Uppercase: ${\r\n                options.requireUppercase ? \"required\" : \"not required\"\r\n            }</li><li>Lowercase: ${\r\n                options.requireLowercase ? \"required\" : \"not required\"\r\n            }</li><li>Digit: ${\r\n                options.requireDigit ? \"required\" : \"not required\"\r\n            }</li><li>Non alphanumeric: ${\r\n                options.requireNonAlphanumeric ? \"required\" : \"not required\"\r\n            }</li></ul></div>`;\r\n\r\n            const rect = passwordElement.getBoundingClientRect();\r\n            popover.style.position = \"absolute\";\r\n            popover.style.top = `${rect.top + 53}px`;\r\n            popover.style.left = `${rect.left}px`;\r\n            document.body.appendChild(popover);\r\n\r\n            function removePopover() {\r\n                popover.remove();\r\n                passwordElement?.removeEventListener(\"blur\", removePopover);\r\n            }\r\n\r\n            passwordElement.addEventListener(\"blur\", removePopover);\r\n        });\r\n    }\r\n\r\n    const toggleConnectionString = document.querySelector(\r\n        \"#toggleConnectionString\"\r\n    );\r\n    if (toggleConnectionString) {\r\n        toggleConnectionString.addEventListener(\"click\", function (e) {\r\n            togglePasswordVisibility(\r\n                document.querySelector(\"#ConnectionString\"),\r\n                document.querySelector(\"#toggleConnectionString\")\r\n            );\r\n        });\r\n    }\r\n\r\n    const togglePassword = document.querySelector(\"#togglePassword\");\r\n    togglePassword?.addEventListener(\"click\", function (e) {\r\n        togglePasswordVisibility(\r\n            document.querySelector(\"#Password\"),\r\n            document.querySelector(\"#togglePassword\")\r\n        );\r\n    });\r\n\r\n    const togglePasswordConfirmation = document.querySelector(\r\n        \"#togglePasswordConfirmation\"\r\n    );\r\n    togglePasswordConfirmation?.addEventListener(\"click\", function (e) {\r\n        togglePasswordVisibility(\r\n            document.querySelector(\"#PasswordConfirmation\"),\r\n            document.querySelector(\"#togglePasswordConfirmation\")\r\n        );\r\n    });\r\n\r\n    setLocalizationUrl();\r\n};\r\n\r\ninit();","/**\r\n * This function initializes a password strength checker on a given input element.\r\n * It evaluates the password based on specified requirements such as minimum length,\r\n * presence of uppercase, lowercase, digits, and special characters.\r\n * A visual progress bar is displayed to indicate the strength level of the password.\r\n *\r\n * @param {HTMLElement} element - The input element to which the strength checker is applied.\r\n * @param {Object} options - Configuration options for password requirements and display settings.\r\n * @param {number} options.requiredLength - Minimum required length of the password.\r\n * @param {boolean} options.requireUppercase - Whether an uppercase letter is required.\r\n * @param {boolean} options.requireLowercase - Whether a lowercase letter is required.\r\n * @param {boolean} options.requireDigit - Whether a digit is required.\r\n * @param {boolean} options.requireNonAlphanumeric - Whether a special character is required.\r\n * @param {string} options.target - CSS selector for the element where the strength progress bar is displayed.\r\n * @param {string} options.style - CSS style string for the progress bar.\r\n */\r\nexport default (element: HTMLInputElement, options: any) => {\r\n\r\n    const settings = Object.assign({\r\n        requiredLength: 8,\r\n        requireUppercase: false,\r\n        requireLowercase: false,\r\n        requireDigit: false,\r\n        requireNonAlphanumeric: false,\r\n        target: '#passwordStrength',\r\n        style: \"margin-top: 7px; height: 7px; border-radius: 5px\"\r\n    }, options);\r\n\r\n    let capitalletters = 0;\r\n    let lowerletters = 0;\r\n    let numbers = 0;\r\n    let specialchars = 0;\r\n\r\n    const upperCase = /[A-Z]/;\r\n    const lowerCase = /[a-z]/;\r\n    const number = /[0-9]/;\r\n    const specialchar = /[^\\da-zA-Z]/;\r\n\r\n    let valid = false;\r\n\r\n    const getPercentage = (a: number, b: number) => (b / a) * 100;\r\n\r\n    const getLevel = (value: number) => {\r\n        if (value >= 100) {\r\n            return \"bg-success\";\r\n        }\r\n\r\n        if (value >= 50) {\r\n            return \"bg-warning\";\r\n        }\r\n\r\n        if (value == 0) {\r\n            return ''; // grayed\r\n        }\r\n\r\n        return \"bg-danger\";\r\n    };\r\n\r\n    const checkStrength = (value: string) => {\r\n\r\n        const minLength = value.length >= settings.requiredLength ? 1 : 0;\r\n        capitalletters = !settings.requireUppercase || value.match(upperCase) ? 1 : 0;\r\n        lowerletters = !settings.requireLowercase || value.match(lowerCase) ? 1 : 0;\r\n        numbers = !settings.requireDigit || value.match(number) ? 1 : 0;\r\n        specialchars = !settings.requireNonAlphanumeric || value.match(specialchar) ? 1 : 0;\r\n\r\n        const total = minLength + capitalletters + lowerletters + numbers + specialchars;\r\n        const percentage = getPercentage(5, total);\r\n\r\n        valid = percentage >= 100;\r\n\r\n        createProgressBar(percentage, getLevel(percentage));\r\n    };\r\n\r\n    const createProgressBar = (percentage: string | number, level: string) => {\r\n        const el = document.createElement(\"div\");\r\n        el.className = \"progress\";\r\n        el.setAttribute(\"value\", percentage.toString());\r\n        el.setAttribute(\"style\", settings.style);\r\n        el.setAttribute(\"max\", \"100\");\r\n        el.setAttribute(\"aria-describedby\", \"\");\r\n        const bar = document.createElement(\"div\");\r\n        bar.className = \"progress-bar \" + level;\r\n        bar.style.width = percentage + \"%\";\r\n        el.appendChild(bar);\r\n        const target = document.querySelector(settings.target);\r\n        target.innerHTML = \"\";\r\n        target.appendChild(el);\r\n    };\r\n\r\n    element.addEventListener(\"keyup\", () => checkStrength(element.value));\r\n    element.addEventListener(\"keydown\", () => checkStrength(element.value));\r\n    element.addEventListener(\"change\", () => checkStrength(element.value));\r\n    element.addEventListener(\"drop\", (event) => {\r\n        event.preventDefault();\r\n        checkStrength(event.dataTransfer?.getData(\"text\") ?? \"\");\r\n    });\r\n\r\n    element.form?.addEventListener(\"submit\", (event) => {\r\n        checkStrength(element.value);\r\n        if (!valid) {\r\n            event.preventDefault();\r\n        }\r\n    });\r\n}\r\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n"],"names":[],"version":3,"file":"setup.js.map","sourceRoot":"../../../../../"}