{"version":3,"sources":["<anon>"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\nCodeMirror.multiplexingMode = function(outer /*, others */) {\n  // Others should be {open, close, mode [, delimStyle] [, innerStyle] [, parseDelimiters]} objects\n  var others = Array.prototype.slice.call(arguments, 1);\n  function indexOf(string, pattern, from, returnEnd) {\n    if (typeof pattern == \"string\") {\n      var found = string.indexOf(pattern, from);\n      return returnEnd && found > -1 ? found + pattern.length : found;\n    }\n    var m = pattern.exec(from ? string.slice(from) : string);\n    return m ? m.index + from + (returnEnd ? m[0].length : 0) : -1;\n  }\n  return {\n    startState: function() {\n      return {\n        outer: CodeMirror.startState(outer),\n        innerActive: null,\n        inner: null,\n        startingInner: false\n      };\n    },\n    copyState: function(state) {\n      return {\n        outer: CodeMirror.copyState(outer, state.outer),\n        innerActive: state.innerActive,\n        inner: state.innerActive && CodeMirror.copyState(state.innerActive.mode, state.inner),\n        startingInner: state.startingInner\n      };\n    },\n    token: function(stream, state) {\n      if (!state.innerActive) {\n        var cutOff = Infinity, oldContent = stream.string;\n        for (var i = 0; i < others.length; ++i) {\n          var other = others[i];\n          var found = indexOf(oldContent, other.open, stream.pos);\n          if (found == stream.pos) {\n            if (!other.parseDelimiters) stream.match(other.open);\n            state.startingInner = !!other.parseDelimiters\n            state.innerActive = other;\n            // Get the outer indent, making sure to handle CodeMirror.Pass\n            var outerIndent = 0;\n            if (outer.indent) {\n              var possibleOuterIndent = outer.indent(state.outer, \"\", \"\");\n              if (possibleOuterIndent !== CodeMirror.Pass) outerIndent = possibleOuterIndent;\n            }\n            state.inner = CodeMirror.startState(other.mode, outerIndent);\n            return other.delimStyle && (other.delimStyle + \" \" + other.delimStyle + \"-open\");\n          } else if (found != -1 && found < cutOff) {\n            cutOff = found;\n          }\n        }\n        if (cutOff != Infinity) stream.string = oldContent.slice(0, cutOff);\n        var outerToken = outer.token(stream, state.outer);\n        if (cutOff != Infinity) stream.string = oldContent;\n        return outerToken;\n      } else {\n        var curInner = state.innerActive, oldContent = stream.string;\n        if (!curInner.close && stream.sol()) {\n          state.innerActive = state.inner = null;\n          return this.token(stream, state);\n        }\n        var found = curInner.close && !state.startingInner ?\n            indexOf(oldContent, curInner.close, stream.pos, curInner.parseDelimiters) : -1;\n        if (found == stream.pos && !curInner.parseDelimiters) {\n          stream.match(curInner.close);\n          state.innerActive = state.inner = null;\n          return curInner.delimStyle && (curInner.delimStyle + \" \" + curInner.delimStyle + \"-close\");\n        }\n        if (found > -1) stream.string = oldContent.slice(0, found);\n        var innerToken = curInner.mode.token(stream, state.inner);\n        if (found > -1) stream.string = oldContent;\n        else if (stream.pos > stream.start) state.startingInner = false\n        if (found == stream.pos && curInner.parseDelimiters)\n          state.innerActive = state.inner = null;\n        if (curInner.innerStyle) {\n          if (innerToken) innerToken = innerToken + \" \" + curInner.innerStyle;\n          else innerToken = curInner.innerStyle;\n        }\n        return innerToken;\n      }\n    },\n    indent: function(state, textAfter, line) {\n      var mode = state.innerActive ? state.innerActive.mode : outer;\n      if (!mode.indent) return CodeMirror.Pass;\n      return mode.indent(state.innerActive ? state.inner : state.outer, textAfter, line);\n    },\n    blankLine: function(state) {\n      var mode = state.innerActive ? state.innerActive.mode : outer;\n      if (mode.blankLine) {\n        mode.blankLine(state.innerActive ? state.inner : state.outer);\n      }\n      if (!state.innerActive) {\n        for (var i = 0; i < others.length; ++i) {\n          var other = others[i];\n          if (other.open === \"\\n\") {\n            state.innerActive = other;\n            state.inner = CodeMirror.startState(other.mode, mode.indent ? mode.indent(state.outer, \"\", \"\") : 0);\n          }\n        }\n      } else if (state.innerActive.close === \"\\n\") {\n        state.innerActive = state.inner = null;\n      }\n    },\n    electricChars: outer.electricChars,\n    innerMode: function(state) {\n      return state.inner ? {state: state.inner, mode: state.innerActive.mode} : {state: state.outer, mode: outer};\n    }\n  };\n};\n});\n"],"names":["mod","exports","module","require","define","amd","CodeMirror","multiplexingMode","outer","others","Array","prototype","slice","call","arguments","indexOf","string","pattern","from","returnEnd","found","length","m","exec","index","startState","innerActive","inner","startingInner","copyState","state","mode","token","stream","curInner","oldContent","close","sol","pos","parseDelimiters","match","delimStyle","innerToken","start","innerStyle","cutOff","Infinity","i","other","open","outerIndent","indent","possibleOuterIndent","Pass","outerToken","textAfter","line","blankLine","electricChars","innerMode"],"mappings":"CAGA,AAAC,SAASA,CAAG,EACP,AAAkB,UAAlB,OAAOC,SAAuB,AAAiB,UAAjB,OAAOC,OACvCF,EAAIG,QAAQ,yBACL,AAAiB,YAAjB,OAAOC,QAAwBA,OAAOC,GAAG,CAChDD,OAAO,CAAC,uBAAuB,CAAEJ,GAEjCA,EAAIM,WACR,EAAG,SAASA,CAAU,EACtB,YAEAA,CAAAA,EAAWC,gBAAgB,CAAG,SAASC,CAAK,EAE1C,IAAIC,EAASC,MAAMC,SAAS,CAACC,KAAK,CAACC,IAAI,CAACC,UAAW,GAEnD,SAASC,EAAQC,CAAM,CAAEC,CAAO,CAAEC,CAAI,CAAEC,CAAS,EAC/C,GAAI,AAAkB,UAAlB,OAAOF,EAAqB,CAC9B,IAAIG,EAAQJ,EAAOD,OAAO,CAACE,EAASC,GACpC,OAAOC,GAAaC,EAAQ,GAAKA,EAAQH,EAAQI,MAAM,CAAGD,CAC5D,CACA,IAAIE,EAAIL,EAAQM,IAAI,CAACL,EAAOF,EAAOJ,KAAK,CAACM,GAAQF,GACjD,OAAOM,EAAIA,EAAEE,KAAK,CAAGN,EAAQC,CAAAA,EAAYG,CAAC,CAAC,EAAE,CAACD,MAAM,CAAG,CAAA,EAAK,EAC9D,CAEA,MAAO,CACLI,WAAY,WACV,MAAO,CACLjB,MAAOF,EAAWmB,UAAU,CAACjB,GAC7BkB,YAAa,KACbC,MAAO,KACPC,cAAe,CAAA,CACjB,CACF,EAEAC,UAAW,SAASC,CAAK,EACvB,MAAO,CACLtB,MAAOF,EAAWuB,SAAS,CAACrB,EAAOsB,EAAMtB,KAAK,EAC9CkB,YAAaI,EAAMJ,WAAW,CAC9BC,MAAOG,EAAMJ,WAAW,EAAIpB,EAAWuB,SAAS,CAACC,EAAMJ,WAAW,CAACK,IAAI,CAAED,EAAMH,KAAK,EACpFC,cAAeE,EAAMF,aAAa,AACpC,CACF,EAEAI,MAAO,SAASC,CAAM,CAAEH,CAAK,EAC3B,GAAKA,EAAMJ,WAAW,CA2Bf,CACL,IAAIQ,EAAWJ,EAAMJ,WAAW,CAAES,EAAaF,EAAOjB,MAAM,CAC5D,GAAI,CAACkB,EAASE,KAAK,EAAIH,EAAOI,GAAG,GAE/B,OADAP,EAAMJ,WAAW,CAAGI,EAAMH,KAAK,CAAG,KAC3B,IAAI,CAACK,KAAK,CAACC,EAAQH,GAE5B,IAAIV,EAAQc,EAASE,KAAK,EAAI,CAACN,EAAMF,aAAa,CAC9Cb,EAAQoB,EAAYD,EAASE,KAAK,CAAEH,EAAOK,GAAG,CAAEJ,EAASK,eAAe,EAAI,GAChF,GAAInB,GAASa,EAAOK,GAAG,EAAI,CAACJ,EAASK,eAAe,CAGlD,OAFAN,EAAOO,KAAK,CAACN,EAASE,KAAK,EAC3BN,EAAMJ,WAAW,CAAGI,EAAMH,KAAK,CAAG,KAC3BO,EAASO,UAAU,EAAKP,EAASO,UAAU,CAAG,IAAMP,EAASO,UAAU,CAAG,SAE/ErB,EAAQ,IAAIa,CAAAA,EAAOjB,MAAM,CAAGmB,EAAWvB,KAAK,CAAC,EAAGQ,EAAK,EACzD,IAAIsB,EAAaR,EAASH,IAAI,CAACC,KAAK,CAACC,EAAQH,EAAMH,KAAK,EAYxD,OAXIP,EAAQ,GAAIa,EAAOjB,MAAM,CAAGmB,EACvBF,EAAOK,GAAG,CAAGL,EAAOU,KAAK,EAAEb,CAAAA,EAAMF,aAAa,CAAG,CAAA,CAAI,EAE1DR,GAASa,EAAOK,GAAG,EAAIJ,EAASK,eAAe,EACjDT,CAAAA,EAAMJ,WAAW,CAAGI,EAAMH,KAAK,CAAG,IAAG,EAEnCO,EAASU,UAAU,GACLF,EAAZA,EAAyBA,EAAa,IAAMR,EAASU,UAAU,CACjDV,EAASU,UAAU,EAGhCF,CACT,CApDE,IAAK,IADDG,EAASC,IAAUX,EAAaF,EAAOjB,MAAM,CACxC+B,EAAI,EAAGA,EAAItC,EAAOY,MAAM,CAAE,EAAE0B,EAAG,CACtC,IAAIC,EAAQvC,CAAM,CAACsC,EAAE,CACjB3B,EAAQL,EAAQoB,EAAYa,EAAMC,IAAI,CAAEhB,EAAOK,GAAG,EACtD,GAAIlB,GAASa,EAAOK,GAAG,CAAE,CAClBU,EAAMT,eAAe,EAAEN,EAAOO,KAAK,CAACQ,EAAMC,IAAI,EACnDnB,EAAMF,aAAa,CAAG,CAAC,CAACoB,EAAMT,eAAe,CAC7CT,EAAMJ,WAAW,CAAGsB,EAGpB,IAAIE,EAAc,EAClB,GAAI1C,EAAM2C,MAAM,CAAE,CAChB,IAAIC,EAAsB5C,EAAM2C,MAAM,CAACrB,EAAMtB,KAAK,CAAE,GAAI,IACpD4C,IAAwB9C,EAAW+C,IAAI,EAAEH,CAAAA,EAAcE,CAAkB,CAC/E,CAGA,OADAtB,EAAMH,KAAK,CAAGrB,EAAWmB,UAAU,CAACuB,EAAMjB,IAAI,CAAEmB,GACzCF,EAAMP,UAAU,EAAKO,EAAMP,UAAU,CAAG,IAAMO,EAAMP,UAAU,CAAG,OAC1E,CAAoB,IAATrB,GAAeA,EAAQyB,GAChCA,CAAAA,EAASzB,CAAI,CAEjB,CACIyB,GAAUC,KAAUb,CAAAA,EAAOjB,MAAM,CAAGmB,EAAWvB,KAAK,CAAC,EAAGiC,EAAM,EAClE,IAAIS,EAAa9C,EAAMwB,KAAK,CAACC,EAAQH,EAAMtB,KAAK,EAEhD,OADIqC,GAAUC,KAAUb,CAAAA,EAAOjB,MAAM,CAAGmB,CAAS,EAC1CmB,CA6BX,EAEAH,OAAQ,SAASrB,CAAK,CAAEyB,CAAS,CAAEC,CAAI,EACrC,IAAIzB,EAAOD,EAAMJ,WAAW,CAAGI,EAAMJ,WAAW,CAACK,IAAI,CAAGvB,SACxD,AAAKuB,EAAKoB,MAAM,CACTpB,EAAKoB,MAAM,CAACrB,EAAMJ,WAAW,CAAGI,EAAMH,KAAK,CAAGG,EAAMtB,KAAK,CAAE+C,EAAWC,GADpDlD,EAAW+C,IAAI,AAE1C,EAEAI,UAAW,SAAS3B,CAAK,EACvB,IAAIC,EAAOD,EAAMJ,WAAW,CAAGI,EAAMJ,WAAW,CAACK,IAAI,CAAGvB,EAIxD,GAHIuB,EAAK0B,SAAS,EAChB1B,EAAK0B,SAAS,CAAC3B,EAAMJ,WAAW,CAAGI,EAAMH,KAAK,CAAGG,EAAMtB,KAAK,EAEzDsB,EAAMJ,WAAW,CAQiB,OAA5BI,EAAMJ,WAAW,CAACU,KAAK,EAChCN,CAAAA,EAAMJ,WAAW,CAAGI,EAAMH,KAAK,CAAG,IAAG,OARrC,IAAK,IAAIoB,EAAI,EAAGA,EAAItC,EAAOY,MAAM,CAAE,EAAE0B,EAAG,CACtC,IAAIC,EAAQvC,CAAM,CAACsC,EAAE,AACF,CAAA,OAAfC,EAAMC,IAAI,GACZnB,EAAMJ,WAAW,CAAGsB,EACpBlB,EAAMH,KAAK,CAAGrB,EAAWmB,UAAU,CAACuB,EAAMjB,IAAI,CAAEA,EAAKoB,MAAM,CAAGpB,EAAKoB,MAAM,CAACrB,EAAMtB,KAAK,CAAE,GAAI,IAAM,GAErG,CAIJ,EAEAkD,cAAelD,EAAMkD,aAAa,CAElCC,UAAW,SAAS7B,CAAK,EACvB,OAAOA,EAAMH,KAAK,CAAG,CAACG,MAAOA,EAAMH,KAAK,CAAEI,KAAMD,EAAMJ,WAAW,CAACK,IAAI,EAAI,CAACD,MAAOA,EAAMtB,KAAK,CAAEuB,KAAMvB,CAAK,CAC5G,CACF,CACF,CAEA"}
