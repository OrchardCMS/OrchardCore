{"version":3,"sources":["<anon>"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n/**\n * Tag-closer extension for CodeMirror.\n *\n * This extension adds an \"autoCloseTags\" option that can be set to\n * either true to get the default behavior, or an object to further\n * configure its behavior.\n *\n * These are supported options:\n *\n * `whenClosing` (default true)\n *   Whether to autoclose when the '/' of a closing tag is typed.\n * `whenOpening` (default true)\n *   Whether to autoclose the tag when the final '>' of an opening\n *   tag is typed.\n * `dontCloseTags` (default is empty tags for HTML, none for XML)\n *   An array of tag names that should not be autoclosed.\n * `indentTags` (default is block tags for HTML, none for XML)\n *   An array of tag names that should, when opened, cause a\n *   blank line to be added inside the tag, and the blank line and\n *   closing line to be indented.\n * `emptyTags` (default is none)\n *   An array of XML tag names that should be autoclosed with '/>'.\n *\n * See demos/closetag.html for a usage example.\n */\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../fold/xml-fold\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../fold/xml-fold\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  CodeMirror.defineOption(\"autoCloseTags\", false, function(cm, val, old) {\n    if (old != CodeMirror.Init && old)\n      cm.removeKeyMap(\"autoCloseTags\");\n    if (!val) return;\n    var map = {name: \"autoCloseTags\"};\n    if (typeof val != \"object\" || val.whenClosing !== false)\n      map[\"'/'\"] = function(cm) { return autoCloseSlash(cm); };\n    if (typeof val != \"object\" || val.whenOpening !== false)\n      map[\"'>'\"] = function(cm) { return autoCloseGT(cm); };\n    cm.addKeyMap(map);\n  });\n  var htmlDontClose = [\"area\", \"base\", \"br\", \"col\", \"command\", \"embed\", \"hr\", \"img\", \"input\", \"keygen\", \"link\", \"meta\", \"param\",\n                       \"source\", \"track\", \"wbr\"];\n  var htmlIndent = [\"applet\", \"blockquote\", \"body\", \"button\", \"div\", \"dl\", \"fieldset\", \"form\", \"frameset\", \"h1\", \"h2\", \"h3\", \"h4\",\n                    \"h5\", \"h6\", \"head\", \"html\", \"iframe\", \"layer\", \"legend\", \"object\", \"ol\", \"p\", \"select\", \"table\", \"ul\"];\n  function autoCloseGT(cm) {\n    if (cm.getOption(\"disableInput\")) return CodeMirror.Pass;\n    var ranges = cm.listSelections(), replacements = [];\n    var opt = cm.getOption(\"autoCloseTags\");\n    for (var i = 0; i < ranges.length; i++) {\n      if (!ranges[i].empty()) return CodeMirror.Pass;\n      var pos = ranges[i].head, tok = cm.getTokenAt(pos);\n      var inner = CodeMirror.innerMode(cm.getMode(), tok.state), state = inner.state;\n      var tagInfo = inner.mode.xmlCurrentTag && inner.mode.xmlCurrentTag(state)\n      var tagName = tagInfo && tagInfo.name\n      if (!tagName) return CodeMirror.Pass\n      var html = inner.mode.configuration == \"html\";\n      var dontCloseTags = (typeof opt == \"object\" && opt.dontCloseTags) || (html && htmlDontClose);\n      var indentTags = (typeof opt == \"object\" && opt.indentTags) || (html && htmlIndent);\n      if (tok.end > pos.ch) tagName = tagName.slice(0, tagName.length - tok.end + pos.ch);\n      var lowerTagName = tagName.toLowerCase();\n      // Don't process the '>' at the end of an end-tag or self-closing tag\n      if (!tagName ||\n          tok.type == \"string\" && (tok.end != pos.ch || !/[\\\"\\']/.test(tok.string.charAt(tok.string.length - 1)) || tok.string.length == 1) ||\n          tok.type == \"tag\" && tagInfo.close ||\n          tok.string.indexOf(\"/\") == (pos.ch - tok.start - 1) || // match something like <someTagName />\n          dontCloseTags && indexOf(dontCloseTags, lowerTagName) > -1 ||\n          closingTagExists(cm, inner.mode.xmlCurrentContext && inner.mode.xmlCurrentContext(state) || [], tagName, pos, true))\n        return CodeMirror.Pass;\n      var emptyTags = typeof opt == \"object\" && opt.emptyTags;\n      if (emptyTags && indexOf(emptyTags, tagName) > -1) {\n        replacements[i] = { text: \"/>\", newPos: CodeMirror.Pos(pos.line, pos.ch + 2) };\n        continue;\n      }\n      var indent = indentTags && indexOf(indentTags, lowerTagName) > -1;\n      replacements[i] = {indent: indent,\n                         text: \">\" + (indent ? \"\\n\\n\" : \"\") + \"</\" + tagName + \">\",\n                         newPos: indent ? CodeMirror.Pos(pos.line + 1, 0) : CodeMirror.Pos(pos.line, pos.ch + 1)};\n    }\n    var dontIndentOnAutoClose = (typeof opt == \"object\" && opt.dontIndentOnAutoClose);\n    for (var i = ranges.length - 1; i >= 0; i--) {\n      var info = replacements[i];\n      cm.replaceRange(info.text, ranges[i].head, ranges[i].anchor, \"+insert\");\n      var sel = cm.listSelections().slice(0);\n      sel[i] = {head: info.newPos, anchor: info.newPos};\n      cm.setSelections(sel);\n      if (!dontIndentOnAutoClose && info.indent) {\n        cm.indentLine(info.newPos.line, null, true);\n        cm.indentLine(info.newPos.line + 1, null, true);\n      }\n    }\n  }\n  function autoCloseCurrent(cm, typingSlash) {\n    var ranges = cm.listSelections(), replacements = [];\n    var head = typingSlash ? \"/\" : \"</\";\n    var opt = cm.getOption(\"autoCloseTags\");\n    var dontIndentOnAutoClose = (typeof opt == \"object\" && opt.dontIndentOnSlash);\n    for (var i = 0; i < ranges.length; i++) {\n      if (!ranges[i].empty()) return CodeMirror.Pass;\n      var pos = ranges[i].head, tok = cm.getTokenAt(pos);\n      var inner = CodeMirror.innerMode(cm.getMode(), tok.state), state = inner.state;\n      if (typingSlash && (tok.type == \"string\" || tok.string.charAt(0) != \"<\" ||\n                          tok.start != pos.ch - 1))\n        return CodeMirror.Pass;\n      // Kludge to get around the fact that we are not in XML mode\n      // when completing in JS/CSS snippet in htmlmixed mode. Does not\n      // work for other XML embedded languages (there is no general\n      // way to go from a mixed mode to its current XML state).\n      var replacement, mixed = inner.mode.name != \"xml\" && cm.getMode().name == \"htmlmixed\"\n      if (mixed && inner.mode.name == \"javascript\") {\n        replacement = head + \"script\";\n      } else if (mixed && inner.mode.name == \"css\") {\n        replacement = head + \"style\";\n      } else {\n        var context = inner.mode.xmlCurrentContext && inner.mode.xmlCurrentContext(state)\n        var top = context.length ? context[context.length - 1] : \"\"\n        if (!context || (context.length && closingTagExists(cm, context, top, pos)))\n          return CodeMirror.Pass;\n        replacement = head + top\n      }\n      if (cm.getLine(pos.line).charAt(tok.end) != \">\") replacement += \">\";\n      replacements[i] = replacement;\n    }\n    cm.replaceSelections(replacements);\n    ranges = cm.listSelections();\n    if (!dontIndentOnAutoClose) {\n        for (var i = 0; i < ranges.length; i++)\n            if (i == ranges.length - 1 || ranges[i].head.line < ranges[i + 1].head.line)\n                cm.indentLine(ranges[i].head.line);\n    }\n  }\n  function autoCloseSlash(cm) {\n    if (cm.getOption(\"disableInput\")) return CodeMirror.Pass;\n    return autoCloseCurrent(cm, true);\n  }\n  CodeMirror.commands.closeTag = function(cm) { return autoCloseCurrent(cm); };\n  function indexOf(collection, elt) {\n    if (collection.indexOf) return collection.indexOf(elt);\n    for (var i = 0, e = collection.length; i < e; ++i)\n      if (collection[i] == elt) return i;\n    return -1;\n  }\n  // If xml-fold is loaded, we use its functionality to try and verify\n  // whether a given tag is actually unclosed.\n  function closingTagExists(cm, context, tagName, pos, newTag) {\n    if (!CodeMirror.scanForClosingTag) return false;\n    var end = Math.min(cm.lastLine() + 1, pos.line + 500);\n    var nextClose = CodeMirror.scanForClosingTag(cm, pos, null, end);\n    if (!nextClose || nextClose.tag != tagName) return false;\n    // If the immediate wrapping context contains onCx instances of\n    // the same tag, a closing tag only exists if there are at least\n    // that many closing tags of that type following.\n    var onCx = newTag ? 1 : 0\n    for (var i = context.length - 1; i >= 0; i--) {\n      if (context[i] == tagName) ++onCx\n      else break\n    }\n    pos = nextClose.to;\n    for (var i = 1; i < onCx; i++) {\n      var next = CodeMirror.scanForClosingTag(cm, pos, null, end);\n      if (!next || next.tag != tagName) return false;\n      pos = next.to;\n    }\n    return true;\n  }\n});\n"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineOption","cm","val","old","Init","removeKeyMap","map","name","whenClosing","getOption","Pass","autoCloseCurrent","whenOpening","autoCloseGT","ranges","listSelections","replacements","opt","i","length","empty","pos","head","tok","getTokenAt","inner","innerMode","getMode","state","tagInfo","mode","xmlCurrentTag","tagName","html","configuration","dontCloseTags","htmlDontClose","indentTags","htmlIndent","end","ch","slice","lowerTagName","toLowerCase","type","test","string","charAt","close","indexOf","start","closingTagExists","xmlCurrentContext","emptyTags","text","newPos","Pos","line","indent","dontIndentOnAutoClose","info","replaceRange","anchor","sel","setSelections","indentLine","addKeyMap","typingSlash","dontIndentOnSlash","replacement","mixed","context","top","getLine","replaceSelections","collection","elt","e","newTag","scanForClosingTag","Math","min","lastLine","nextClose","tag","onCx","to","next","commands","closeTag"],"mappings":"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"}
