function initializeTagsEditor(e){if(e){var t=e.id,a=Vue.component("vue-multiselect",window.VueMultiselect.default);return new Vue({el:"#"+t,components:{"vue-multiselect":a},data:function(){var t=JSON.parse(e.dataset.allTagTerms||"[]"),a=t;"true"===e.dataset.leavesOnly&&(a=a.filter(e=>e.isLeaf),t.forEach(e=>{a.includes(e)||(e.selected=!1)}));var n=t.filter(e=>e.selected);return{open:e.dataset.open,taxonomyContentItemId:e.dataset.taxonomyContentItemId,createTagUrl:e.dataset.createTagUrl,createTagErrorMessage:e.dataset.createTagErrorMessage,selectedTagTerms:n,selectableTagTerms:a,allTagTerms:t}},computed:{isDisabled(){return"false"===this.open&&0===this.selectableTagTerms.length},selectedTagTermsIds(){return this.selectedTagTerms?Array.isArray(this.selectedTagTerms)?this.selectedTagTerms.map(e=>e.contentItemId):this.selectedTagTerms.contentItemId:[]}},methods:{async createTagTerm(e){try{let t=await fetch(this.createTagUrl,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({__RequestVerificationToken:document.querySelector("input[name='__RequestVerificationToken']").value,taxonomyContentItemId:this.taxonomyContentItemId,displayText:e})}),a=await t.json(),n={contentItemId:a.contentItemId,displayText:a.displayText,selected:!0};this.allTagTerms.push(n),this.selectedTagTerms.push(n)}catch(e){alert(this.createTagErrorMessage)}},onSelect(e){this.allTagTerms.find(t=>t.contentItemId===e.contentItemId).selected=!0,document.dispatchEvent(new Event("contentpreview:render"))},onRemove(e){this.allTagTerms.find(t=>t.contentItemId===e.contentItemId).selected=!1,document.dispatchEvent(new Event("contentpreview:render"))}}})}}