{"version":3,"sources":["<anon>"],"sourcesContent":["function initializeTagsEditor(element) {\n    if (element) {\n        var elementId = element.id;\n        var vueMultiselect = Vue.component('vue-multiselect', window.VueMultiselect.default);\n        var vm = new Vue({\n            el: '#' + elementId,\n            components: { 'vue-multiselect': vueMultiselect },\n            data: function () {\n                // All terms generate a model binding.\n                var allTagTerms = JSON.parse(element.dataset.allTagTerms || \"[]\");\n                // Selectable terms are shown in options list.\n                var selectableTagTerms = allTagTerms;\n                // Leaves only filters selectableTerms.\n                if (element.dataset.leavesOnly === 'true') {\n                    selectableTagTerms = selectableTagTerms.filter(tagTerm => tagTerm.isLeaf);\n                    // Self heal when leaves only value is updated.\n                    allTagTerms.forEach(tagTerm => {\n                        if (!selectableTagTerms.includes(tagTerm)) {\n                            tagTerm.selected = false;\n                        }\n                    });\n                }\n                // Selected terms are show in selected tags field.\n                var selectedTagTerms = allTagTerms.filter(tagTerm => tagTerm.selected);\n                return {\n                    open: element.dataset.open,\n                    taxonomyContentItemId: element.dataset.taxonomyContentItemId,\n                    createTagUrl: element.dataset.createTagUrl,\n                    createTagErrorMessage: element.dataset.createTagErrorMessage,\n                    selectedTagTerms,\n                    selectableTagTerms,\n                    allTagTerms\n                }\n            },\n            computed: {\n                isDisabled() {\n                    return this.open === 'false' && this.selectableTagTerms.length === 0;\n                },\n                selectedTagTermsIds() {\n                    if (!this.selectedTagTerms) {\n                        return [];\n                    }\n                    if (Array.isArray(this.selectedTagTerms)) {\n                        return this.selectedTagTerms.map(tagTerm => tagTerm.contentItemId);\n                    } else {\n                        return this.selectedTagTerms.contentItemId;\n                    }\n                }\n            },\n            methods: {\n                async createTagTerm(newTagTerm) {\n                    const self = this;\n                    try {\n                        const response = await fetch(self.createTagUrl, {\n                            method: 'POST',\n                            headers: {\n                                'Content-Type': 'application/json'\n                            },\n                            body: JSON.stringify({\n                                __RequestVerificationToken: document.querySelector(\"input[name='__RequestVerificationToken']\").value,\n                                taxonomyContentItemId: self.taxonomyContentItemId,\n                                displayText: newTagTerm\n                            })\n                        });\n                        const data = await response.json();\n                        const tagTerm = {\n                            contentItemId: data.contentItemId,\n                            displayText: data.displayText,\n                            selected: true\n                        };\n                        // Add to allTagTerms array so model binding will save tag as selected.\n                        self.allTagTerms.push(tagTerm);\n                        // Add to selectedTerms to display in vue-multi-select.\n                        self.selectedTagTerms.push(tagTerm);\n                    } catch (error) {\n                        alert(self.createTagErrorMessage);\n                    }\n                },\n                onSelect(selectedTagTerm) {\n                    const tagTerm = this.allTagTerms.find(tagTerm => tagTerm.contentItemId === selectedTagTerm.contentItemId);\n                    tagTerm.selected = true;\n                    document.dispatchEvent(new Event('contentpreview:render'));\n                },\n                onRemove(removedTagTerm) {\n                    const tagTerm = this.allTagTerms.find(tagTerm => tagTerm.contentItemId === removedTagTerm.contentItemId);\n                    tagTerm.selected = false;\n                    document.dispatchEvent(new Event('contentpreview:render'));\n                }\n            }\n        });\n        return vm;\n    }\n}\n"],"names":["initializeTagsEditor","element","elementId","id","vueMultiselect","Vue","component","window","VueMultiselect","default","el","components","data","allTagTerms","JSON","parse","dataset","selectableTagTerms","leavesOnly","filter","tagTerm","isLeaf","forEach","includes","selected","selectedTagTerms","open","taxonomyContentItemId","createTagUrl","createTagErrorMessage","computed","isDisabled","length","selectedTagTermsIds","Array","isArray","map","contentItemId","methods","createTagTerm","newTagTerm","response","fetch","self","method","headers","body","stringify","__RequestVerificationToken","document","querySelector","value","displayText","json","push","error","alert","onSelect","selectedTagTerm","find","dispatchEvent","Event","onRemove","removedTagTerm"],"mappings":"AAAA,SAASA,qBAAqBC,CAAO,EACjC,GAAIA,EAAS,CAET,IAAIC,EAAYD,EAAQE,EAAE,CACtBC,EAAiBC,IAAIC,SAAS,CAAC,kBAAmBC,OAAOC,cAAc,CAACC,OAAO,EA8FnF,OA5FS,IAAIJ,IAAI,CACbK,GAAI,IAAMR,EACVS,WAAY,CAAE,kBAAmBP,CAAe,EAChDQ,KAAM,WAEF,IAAIC,EAAcC,KAAKC,KAAK,CAACd,EAAQe,OAAO,CAACH,WAAW,EAAI,MAGxDI,EAAqBJ,CAGU,CAAA,SAA/BZ,EAAQe,OAAO,CAACE,UAAU,GAC1BD,EAAqBA,EAAmBE,MAAM,CAACC,GAAWA,EAAQC,MAAM,EAExER,EAAYS,OAAO,CAACF,IACXH,EAAmBM,QAAQ,CAACH,IAC7BA,CAAAA,EAAQI,QAAQ,CAAG,CAAA,CAAI,CAE/B,IAIJ,IAAIC,EAAmBZ,EAAYM,MAAM,CAACC,GAAWA,EAAQI,QAAQ,EAErE,MAAO,CACHE,KAAMzB,EAAQe,OAAO,CAACU,IAAI,CAC1BC,sBAAuB1B,EAAQe,OAAO,CAACW,qBAAqB,CAC5DC,aAAc3B,EAAQe,OAAO,CAACY,YAAY,CAC1CC,sBAAuB5B,EAAQe,OAAO,CAACa,qBAAqB,CAC5DJ,iBAAAA,EACAR,mBAAAA,EACAJ,YAAAA,CACJ,CACJ,EACAiB,SAAU,CACNC,aACI,MAAO,AAAc,UAAd,IAAI,CAACL,IAAI,EAAgB,AAAmC,IAAnC,IAAI,CAACT,kBAAkB,CAACe,MAAM,AAClE,EACAC,6BACI,AAAK,IAAI,CAACR,gBAAgB,CAGtBS,MAAMC,OAAO,CAAC,IAAI,CAACV,gBAAgB,EAC5B,IAAI,CAACA,gBAAgB,CAACW,GAAG,CAAChB,GAAWA,EAAQiB,aAAa,EAE1D,IAAI,CAACZ,gBAAgB,CAACY,aAAa,CALnC,EAAE,AAOjB,CACJ,EACAC,QAAS,CACL,MAAMC,cAAcC,CAAU,EAE1B,GAAI,CACA,IAAMC,EAAW,MAAMC,MAAMC,AAFpB,IAAI,CAEqBf,YAAY,CAAE,CAC5CgB,OAAQ,OACRC,QAAS,CACL,eAAgB,kBACpB,EACAC,KAAMhC,KAAKiC,SAAS,CAAC,CACjBC,2BAA4BC,SAASC,aAAa,CAAC,4CAA4CC,KAAK,CACpGxB,sBAAuBgB,AATtB,IAAI,CASuBhB,qBAAqB,CACjDyB,YAAaZ,CACjB,EACJ,GACM5B,EAAO,MAAM6B,EAASY,IAAI,GAC1BjC,EAAU,CACZiB,cAAezB,EAAKyB,aAAa,CACjCe,YAAaxC,EAAKwC,WAAW,CAC7B5B,SAAU,CAAA,CACd,EAEAmB,AApBS,IAAI,CAoBR9B,WAAW,CAACyC,IAAI,CAAClC,GAGtBuB,AAvBS,IAAI,CAuBRlB,gBAAgB,CAAC6B,IAAI,CAAClC,EAC/B,CAAE,MAAOmC,EAAO,CACZC,MAAMb,AAzBG,IAAI,CAyBFd,qBAAqB,CACpC,CACJ,EACA4B,SAASC,CAAe,EAEpBtC,AADgB,IAAI,CAACP,WAAW,CAAC8C,IAAI,CAACvC,GAAWA,EAAQiB,aAAa,GAAKqB,EAAgBrB,aAAa,EAChGb,QAAQ,CAAG,CAAA,EACnByB,SAASW,aAAa,CAAC,IAAIC,MAAM,yBACrC,EACAC,SAASC,CAAc,EAEnB3C,AADgB,IAAI,CAACP,WAAW,CAAC8C,IAAI,CAACvC,GAAWA,EAAQiB,aAAa,GAAK0B,EAAe1B,aAAa,EAC/Fb,QAAQ,CAAG,CAAA,EACnByB,SAASW,aAAa,CAAC,IAAIC,MAAM,yBACrC,CACJ,CACJ,EAGJ,CACJ"}
