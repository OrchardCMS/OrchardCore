@model TaxonomyPartEditViewModel
@inject IContentManager ContentManager
@inject OrchardCore.ContentManagement.Display.IContentItemDisplayManager ContentItemDisplayManager
@inject OrchardCore.DisplayManagement.ModelBinding.IUpdateModelAccessor ModelUpdaterAccessor
@inject OrchardCore.ContentManagement.Metadata.IContentDefinitionManager ContentDefinitionManager
@using OrchardCore.ContentManagement.Metadata.Settings
@using OrchardCore.ContentManagement.Metadata.Models
@using OrchardCore
@*
    This template is used to render the editor for a Taxonomy content item.
    It render the hierarchy of the terms.
    The shape is created from TaxonomyPartDisplayDriver
*@

<script asp-src="~/OrchardCore.Taxonomies/Scripts/menu.js" at="Foot" depends-on="jQuery-ui"></script>
<style asp-src="~/OrchardCore.Taxonomies/Styles/menu.min.css" debug-src="~/OrchardCore.Taxonomies/Styles/menu.css" depends-on="jQuery-ui"></style>

@{
    var updater = ModelUpdaterAccessor.ModelUpdater;
    var canAddTerm = Model.TaxonomyPart.ContentItem.Id != 0;
    var termContentTypes = (await ContentDefinitionManager.ListTypeDefinitionsAsync()).Where(t => !t.HasStereotype()).OrderBy(x => x.DisplayName);
    var index = 0;
}
<div class="@Orchard.GetWrapperClasses()" asp-validation-class-for="TermContentType">
    <label asp-for="TermContentType" class="@Orchard.GetLabelClasses()">@T["Term Content Type"]</label>
    <div class="@Orchard.GetEndClasses()">
        <select asp-for="TermContentType" class="form-select" asp-items="@(new SelectList(termContentTypes, "Name", "DisplayName"))">
            <option value="">@T["Select a term content type"]</option>
        </select>
    </div>
    <span asp-validation-for="TermContentType"></span>
</div>
<div class="@Orchard.GetWrapperClasses()">

    <div class="@Orchard.GetEndClasses(true)">
        @if (canAddTerm && Model.TermContentType != null)
        {
            var termContentType = await ContentDefinitionManager.GetTypeDefinitionAsync(Model.TermContentType);
            @if (termContentType != null)
            {
                <a class="btn btn-primary btn-sm"
                   asp-route-action="Create"
                   asp-route-controller="Admin"
                   asp-route-id="@Model.TaxonomyPart.TermContentType"
                   asp-route-taxonomyContentItemId="@Model.TaxonomyPart.ContentItem.ContentItemId"
                   asp-route-area="OrchardCore.Taxonomies">
                    @T["Add {0}", termContentType.DisplayName]
                </a>
            }
        }

        <ol id="menu" class="list-group my-3">
            @foreach (var menuItem in Model.TaxonomyPart.ContentItem.As<TaxonomyPart>().Terms)
            {
                var termShape = await ContentItemDisplayManager.BuildDisplayAsync(menuItem, updater, "TermAdmin");
                termShape.Properties["TaxonomyPart"] = Model.TaxonomyPart;
                termShape.Properties["Index"] = index++;
                @await DisplayAsync(termShape)
            }
        </ol>

        <input asp-for="Hierarchy" type="hidden" value="" />
        <div id="msg-leave" style="display:none" data>@T["You have reordered the taxonomy."]</div>
    </div>
</div>
<script at="Foot">
    var menuItemId;
    var confirmLeave;

    $(function () {
        $('#menu')
            .nestedSortable({
                handle: 'div.menu-item-title',
                items: 'li.menu-item',
                toleranceElement: '> div.menu-item-title',
                relocate: function () {
                    confirmLeave = true;
                    $('#@Html.IdFor(m => m.Hierarchy)').attr('value', JSON.stringify($('#menu').nestedSortable('toHierarchy')));
                }
            });

        window.onbeforeunload = function () {
            if (confirmLeave) {
                return $('#msg-leave').text();
            }
        }

        $('#menu').closest("form").on('submit', function (e) {
            confirmLeave = false;
            window.onbeforeunload = function () { };
        });
    });
</script>
