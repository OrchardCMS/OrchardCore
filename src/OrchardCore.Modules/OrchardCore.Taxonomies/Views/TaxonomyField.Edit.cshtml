@model OrchardCore.Taxonomies.ViewModels.EditTaxonomyFieldViewModel
@using OrchardCore.Taxonomies.Settings
@using OrchardCore.ContentManagement.Metadata.Models
@using OrchardCore.Mvc.Utilities
@using OrchardCore
@{
    var settings = Model.PartFieldDefinition.GetSettings<TaxonomyFieldSettings>();
    int previousLevel = 0;
    int closingDivs = 0;
}

<div class="@Orchard.GetFieldWrapperClasses(Model.PartFieldDefinition)" id="@Html.IdFor(x => x.TermEntries)_FieldWrapper">
    <label class="@Orchard.GetLabelClasses(inputRequired: settings.Required)">@Model.PartFieldDefinition.DisplayName()</label>
    <div class="@Orchard.GetEndClasses()">

        @if (!string.IsNullOrEmpty(settings.Hint))
        {
            <div class="hint dashed mt-lg-2">@settings.Hint</div>
        }

        @if (Model.Taxonomy == null)
        {
            <div class="alert alert-danger" role="alert">
                @T["The taxonomy could not be found. Please check the settings for this field."]
            </div>
        }
        <div>
            @for (var i = 0; i < Model.TermEntries.Count; i++)
            {
                var entry = Model.TermEntries[i];
                var term = entry.Term;

                if (entry.Level == previousLevel + 1)
                {
                    WriteLiteral("<div class=\"ps-3\">");
                    closingDivs = entry.Level;
                }
                for (var e = entry.Level; e < previousLevel; e++)
                {
                    WriteLiteral("</div>");
                    closingDivs--;
                }

                @if (!settings.Unique)
                {
                    <div class="form-check">
                        @if (!settings.LeavesOnly || Model.TermEntries[i].IsLeaf)
                        {
                            <input asp-for="@Model.TermEntries[i].Selected" type="checkbox" class="form-check-input" />
                        }
                        else
                        {
                            <input asp-for="@Model.TermEntries[i].Selected" type="checkbox" disabled="disabled" class="form-check-input" />
                        }

                        <label class="form-check-label" asp-for="@Model.TermEntries[i].Selected">
                            @term
                        </label>
                        <input asp-for="@Model.TermEntries[i].ContentItemId" type="hidden" />
                    </div>
                }
                else
                {
                    <div class="form-check">
                        @if (!settings.LeavesOnly || Model.TermEntries[i].IsLeaf)
                        {
                            <input id="@Html.IdFor(x => x.TermEntries[i].Selected)"
                       name="@Html.NameFor(m => m.UniqueValue)"
                       type="radio"
                       value="@Model.TermEntries[i].ContentItemId"
                       checked="@(Model.TermEntries[i].Selected ? "checked" : null)"
                       class="form-check-input" />
                        }
                        else
                        {
                            <input id="@Html.IdFor(x => x.TermEntries[i].Selected)"
                       name="@Html.NameFor(m => m.UniqueValue)"
                       type="radio"
                       value="@Model.TermEntries[i].ContentItemId"
                       disabled="disabled"
                       checked="@(Model.TermEntries[i].Selected ? "checked" : null)"
                       class="form-check-input" />
                        }
                        <label class="form-check-label" asp-for="@Model.TermEntries[i].Selected">
                            @term
                        </label>
                    </div>
                }

                previousLevel = entry.Level;
            }
            @if (closingDivs > 0)
            {
                for (var e = 0; e < closingDivs; e++)
                {
                    WriteLiteral("</div>");
                }
            }
        </div>

        <span asp-validation-for="TermEntries"></span>

    </div>
</div>
