@model RecipeViewModel[]
@using OrchardCore.Recipes.ViewModels

<zone Name="Title"><h1>@RenderTitleSegments(T["Recipes"])</h1></zone>

<p class="alert alert-warning">@T["The current tenant will be reloaded when the recipe is executed."]</p>

<form autocomplete="off" class="position-sticky action-bar">
    <div class="card text-bg-theme mb-3">
        <div class="card-body">
            <div class="row gx-3">
                <div class="col">
                    <div class="has-search">
                        <i class="fa-solid fa-search form-control-feedback" aria-hidden="true"></i>
                        <input id="search-box" class="form-control" placeholder="@T["Search"]" type="search" autofocus>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

<form asp-action="Recipes">
    @{
        var recipeGroups = Model.GroupBy(f => f.Feature).ToList();
        if (Model.Any())
        {
            foreach (var recipeGroup in recipeGroups)
            {
                var groupName = recipeGroup.Key;

                <div class="recipe-group">
                    @{
                        var groupRecipeNames = string.Join(" ", recipeGroup.Select(r => r.DisplayName));
                    }
                    <h4 class="mb-2 mt-2" data-filter-value="@groupName @groupRecipeNames">@groupName</h4>
                    <ul class="list-group" data-filter-value="@groupName @groupRecipeNames">
                        @foreach (var recipe in recipeGroup.OrderBy(r => r.DisplayName))
                        {
                            <li class="list-group-item" data-filter-value="@groupName @recipe.DisplayName">
                                <div class="row">
                                    <div class="col">
                                        <a id="btn-run-@Html.GenerateIdFromName(recipe.Name)" asp-action="Execute" asp-route-basePath="@recipe.BasePath" asp-route-fileName="@recipe.FileName" role="button" class="btn btn-primary btn-sm float-end" data-title="@T["Recipes"]" data-message="@T["Are you sure you want to run the recipe?"]" data-ok-text="@T["Yes"]" data-cancel-text="@T["No"]" data-ok-class="btn-primary" data-url-af="RemoveUrl UnsafeUrl">@T["Run"]</a>
                                        <h6>
                                            @recipe.DisplayName
                                            @if (recipe.IsSetupRecipe)
                                            {
                                                <span class="badge text-bg-warning">
                                                    @T["Setup Recipe"]
                                                </span>
                                            }
                                            @if (recipe.Tags != null && recipe.Tags.Any())
                                            {
                                                @foreach (var tag in recipe.Tags)
                                                {
                                                    <span class="badge ta-badge">
                                                        @tag
                                                    </span>
                                                }
                                            }
                                        </h6>
                                        <small class="text-muted">@recipe.Description</small>
                                    </div>
                                </div>
                            </li>
                        }
                    </ul>
                </div>
                <div id="list-alert" class="alert alert-info d-none" role="alert">
                    @T["<strong>Nothing here!</strong> Your search returned no results."]
                </div>
            }
        }
        else
        {
            <div class="alert alert-info" role="alert">
                @T["<strong>Nothing here!</strong> There are no recipes for the moment."]
            </div>
        }
    }
</form>
<script at="Foot">
    $(function () {
        var searchBox = $('#search-box');

        // On each keypress filter the list of features
        searchBox.keyup(function (e) {
            var search = $(this).val().toLowerCase();
            var elementsToFilter = $("[data-filter-value]");

            // On ESC, clear the search box and display all features
            if (e.keyCode == 27 || search == '') {
                searchBox.val('');
                elementsToFilter.toggle(true);
            }
            else {
                elementsToFilter.each(function () {
                    var text = $(this).data('filter-value').toLowerCase();
                    var found = text.indexOf(search) > -1;
                    $(this).toggle(found);
                });

                var visible = $('.recipe-group > ul > li:visible');
                if (visible.length == 0) {
                    $('#list-alert').removeClass("d-none");
                }
                else {
                    $('#list-alert').addClass("d-none");
                }
            }
        });
    });
</script>
