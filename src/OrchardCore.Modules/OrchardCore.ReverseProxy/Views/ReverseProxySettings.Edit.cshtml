@using OrchardCore

@model ReverseProxySettingsViewModel

@inject IClientIPAddressAccessor ClientIPAddressAccessor

<div class="mb-3" asp-validation-class-for="EnableXForwardedFor">
    <div class="form-check">
        <label class="form-check-label">
            <input asp-for="EnableXForwardedFor" class="form-check-input" />
            @T["Enables the forwarding of the HTTP header X-Forwarded-For"]
        </label>
    </div>
    <span class="hint">@T["Enables the forwarding of the HTTP header X-Forwarded-For"]</span>
    <span class="hint">@T["Current request value;"] @await ClientIPAddressAccessor.GetIPAddressAsync()</span>
</div>

<div class="mb-3" asp-validation-class-for="EnableXForwardedProto">
    <div class="form-check">
        <label class="form-check-label">
            <input asp-for="EnableXForwardedProto" class="form-check-input" />
            @T["Enables the forwarding of the HTTP header X-Forwarded-Proto"]
        </label>
    </div>
    <span class="hint">@T["Enables the forwarding of the HTTP header X-Forwarded-Proto"]</span>
    <span class="hint">@T["Current request value;"] @Context.Request.Scheme</span>
</div>

<div class="mb-3" asp-validation-class-for="EnableXForwardedHost">
    <div class="form-check">
        <label class="form-check-label">
            <input asp-for="EnableXForwardedHost" class="form-check-input" />
            @T["Enables the forwarding of the HTTP header X-Forwarded-Host"]
        </label>
    </div>
    <span class="hint">@T["Enables the forwarding of the HTTP header X-Forwarded-Host"]</span>
    <span class="hint">@T["Current request value;"] @Context.Request.Host</span>
</div>

<p class="hint">
    @T["Documentation available at: {0}", "https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/proxy-load-balancer?view=aspnetcore-3.0"]
</p>
