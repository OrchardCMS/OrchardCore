{"version":3,"sources":["<anon>"],"sourcesContent":["passwordManager = function () {\n    const allowed = {\n        uppers: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\n        lowers: 'abcdefghijklmnopqrstuvwxyz',\n        digits: '0123456789',\n        symbols: '!#$%&\\()*+,-./:;<=>\\'?@@[\\]^_`{|}~'\n    };\n    const getRandomChar = (str) => str.charAt(Math.floor(Math.random() * str.length));\n    const shuffle = (str) => str.sort(function () { return 0.5 - Math.random() });\n    const meetUniqueRule = (str, requiredUniqueChars) => {\n        let uniqueCharacters = str.filter((item, i, ar) => ar.indexOf(item) === i);\n        return uniqueCharacters.length >= requiredUniqueChars;\n    };\n    const copyPassword = (str) => navigator.clipboard.writeText(str);\n    const generatePassword = (requiredPasswordLength, requireUppercase, requireLowercase, requireDigit, requireNonAlphanumeric, requiredUniqueChars) => {\n        let password = [];\n        requiredUniqueChars = requiredUniqueChars | 1;\n        if (requireUppercase) {\n            // At least one uppercase\n            password.push(getRandomChar(allowed.uppers));\n        }\n        if (requireLowercase) {\n            // At least one lowercase\n            password.push(getRandomChar(allowed.lowers));\n        }\n        if (requireDigit) {\n            // At least one digit\n            password.push(getRandomChar(allowed.digits));\n        }\n        if (requireNonAlphanumeric) {\n            // At least one special character\n            password.push(getRandomChar(allowed.symbols));\n        }\n        let passwordLength = password.length;\n        if (passwordLength < requiredPasswordLength) {\n            // At this point we need lengthier password.Fill the rest of the password with random characters\n            let combineAllowed = shuffle(Object.values(allowed)).join('');\n            for (let i = passwordLength; i < requiredPasswordLength; i++) {\n                password.push(getRandomChar(combineAllowed));\n            }\n        }\n        if (requiredUniqueChars > 1 && !meetUniqueRule(password, requiredUniqueChars)) {\n            // The generated password does not meet the required-unique-chars requirment, create another one\n            return generatePassword(requiredPasswordLength, requireUppercase, requireLowercase, requireDigit, requireNonAlphanumeric, requiredUniqueChars);\n        }\n        return shuffle(password).join('');\n    }\n    return {\n        generatePassword: generatePassword,\n        copyPassword: copyPassword\n    };\n}();\n"],"names":["passwordManager","allowed","uppers","lowers","digits","symbols","getRandomChar","str","charAt","Math","floor","random","length","shuffle","sort","meetUniqueRule","requiredUniqueChars","uniqueCharacters","filter","item","i","ar","indexOf","generatePassword","requiredPasswordLength","requireUppercase","requireLowercase","requireDigit","requireNonAlphanumeric","password","push","passwordLength","combineAllowed","Object","values","join","copyPassword","navigator","clipboard","writeText"],"mappings":"AAAAA,gBAAkB,WACd,IAAMC,EAAU,CACZC,OAAQ,6BACRC,OAAQ,6BACRC,OAAQ,aACRC,QAAS,iCACb,EAEMC,EAAgB,AAACC,GAAQA,EAAIC,MAAM,CAACC,KAAKC,KAAK,CAACD,KAAKE,MAAM,GAAKJ,EAAIK,MAAM,GAEzEC,EAAU,AAACN,GAAQA,EAAIO,IAAI,CAAC,WAAc,OAAO,GAAML,KAAKE,MAAM,EAAG,GAErEI,EAAiB,CAACR,EAAKS,IAGlBC,AAFgBV,EAAIW,MAAM,CAAC,CAACC,EAAMC,EAAGC,IAAOA,EAAGC,OAAO,CAACH,KAAUC,GAEhDR,MAAM,EAAII,EAKhCO,EAAmB,CAACC,EAAwBC,EAAkBC,EAAkBC,EAAcC,EAAwBZ,KACxH,IAAIa,EAAW,EAAE,CACjBb,GAA4C,EAExCS,GAEAI,EAASC,IAAI,CAACxB,EAAcL,EAAQC,MAAM,GAE1CwB,GAEAG,EAASC,IAAI,CAACxB,EAAcL,EAAQE,MAAM,GAE1CwB,GAEAE,EAASC,IAAI,CAACxB,EAAcL,EAAQG,MAAM,GAG1CwB,GAEAC,EAASC,IAAI,CAACxB,EAAcL,EAAQI,OAAO,GAG/C,IAAI0B,EAAiBF,EAASjB,MAAM,CACpC,GAAImB,EAAiBP,EAAwB,CAEzC,IAAIQ,EAAiBnB,EAAQoB,OAAOC,MAAM,CAACjC,IAAUkC,IAAI,CAAC,IAC1D,IAAK,IAAIf,EAAIW,EAAgBX,EAAII,EAAwBJ,IACrDS,EAASC,IAAI,CAACxB,EAAc0B,GAEpC,QAEA,AAAIhB,EAAsB,GAAK,CAACD,EAAec,EAAUb,GAE9CO,EAAiBC,EAAwBC,EAAkBC,EAAkBC,EAAcC,EAAwBZ,GAGvHH,EAAQgB,GAAUM,IAAI,CAAC,GAClC,EAEA,MAAO,CACHZ,iBAAkBA,EAClBa,aA3CiB,AAAC7B,GAAQ8B,UAAUC,SAAS,CAACC,SAAS,CAAChC,EA4C5D,CACJ"}
