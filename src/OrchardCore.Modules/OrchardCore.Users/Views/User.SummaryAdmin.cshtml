<div class="d-flex justify-content-between align-items-center">
    <div class="d-flex flex-column">
        <div>
            @if (Model.Header != null)
            {
                <div class="header">@await DisplayAsync(Model.Header)</div>
            }

            @if (Model.Meta != null)
            {
                <div class="metadata">
                    @await DisplayAsync(Model.Meta)
                </div>
            }

            @if (Model.Content != null)
            {
                <div class="primary">@await DisplayAsync(Model.Content)</div>
            }
        </div>

        @if (Model.Description != null)
        {
            <div>@await DisplayAsync(Model.Description)</div>
        }
    </div>

    <div>
        @if (Model.Actions != null)
        {
            @await DisplayAsync(Model.Actions)
        }

        @if (Model.ActionsMenu != null && Model.ActionsMenu.HasItems)
        {
            <div class="btn-group" title="@T["Actions"]">
                <button type="button" class="btn btn-sm btn-secondary dropdown-toggle actions" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <span>@T["Actions"]</span>
                </button>
                <ul class="actions-menu dropdown-menu dropdown-menu-end">
                    @await DisplayAsync(Model.ActionsMenu)
                </ul>
            </div>
        }
    </div>
</div>
