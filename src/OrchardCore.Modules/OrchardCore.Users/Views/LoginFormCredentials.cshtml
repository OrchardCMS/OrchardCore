@model LoginViewModel

<div class="mb-3">
    <label asp-for="UserName" class="form-label">@T["Username or email address"]</label>
    <input asp-for="UserName" class="form-control" autofocus tabindex="1" />
    <span asp-validation-for="UserName" class="text-danger"></span>
</div>

<div class="mb-3">
    <label asp-for="Password" class="form-label">@T["Password"]</label>
    <div class="input-group">
        <input asp-for="Password" class="form-control" tabindex="2" />
        <button tabindex="-1" class="btn btn-secondary" type="button" id="togglePassword"><i class="icon fa fa-eye"></i></button>
    </div>
    <span asp-validation-for="Password" class="text-danger"></span>
</div>

<div class="mb-3 form-check">
    <input asp-for="RememberMe" class="form-check-input" tabindex="3">
    <label asp-for="RememberMe" class="form-check-label">@T["Remember me"]</label>
</div>


<script at="Foot">
    let togglePassword = document.querySelector('#togglePassword');
    let password = document.querySelector('#@Html.IdFor(m => m.Password)');

    togglePassword.addEventListener('click', function (e) {
        type = password.getAttribute('type') === 'password' ? 'text' : 'password';
        password.setAttribute('type', type);

        icon = this.getElementsByClassName('icon')[0];
        if (icon.getAttribute('data-icon')) {
            type === 'password' ? icon.setAttribute('data-icon', 'eye') : icon.setAttribute('data-icon', 'eye-slash');
        }
        else {
            type === 'password' ? icon.classList.remove('fa-eye-slash') : icon.classList.remove('fa-eye');
            type === 'password' ? icon.classList.add('fa-eye') : icon.classList.add('fa-eye-slash');
        }
    });
</script>

