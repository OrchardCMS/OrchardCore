@using OrchardCore
@using OrchardCore.Forms.ViewModels
@model InputPartEditViewModel
@{
    var wrapperId = Html.IdFor(m => m);
}
<div class="@Orchard.GetWrapperClasses()" id="@wrapperId">
    <label asp-for="Type" class="@Orchard.GetLabelClasses()">@T["Type"]</label>
    <div class="@Orchard.GetEndClasses()">
        <select asp-for="Type" class="form-select content-preview-select field-type-select-menu">
            <option value="text">@T["Text"]</option>
            <option value="number">@T["Number"]</option>
            <option value="email">@T["Email"]</option>
            <option value="tel">@T["Phone"]</option>
            <option value="date">@T["Date"]</option>
            <option value="time">@T["Time"]</option>
            <option value="datetime">@T["DateTime"]</option>
            <option value="datetime-local">@T["Local DateTime"]</option>
            <option value="month">@T["Month"]</option>
            <option value="week">@T["Week"]</option>
            <option value="hidden">@T["Hidden"]</option>
            <option value="password">@T["Password"]</option>
            <option value="checkbox">@T["Checkbox"]</option>
            <option value="color">@T["Color"]</option>
            <option value="range">@T["Range"]</option>
            <option value="file">@T["File"]</option>
            <option value="url">@T["Url"]</option>
            <option value="image">@T["Image"]</option>
            <option value="reset">@T["Reset"]</option>
            <option value="search">@T["Search"]</option>
            <option value="submit">@T["Submit"]</option>
        </select>
        <span class="hint">@T["The button type."]</span>
    </div>
</div>

<div class="@Orchard.GetWrapperClasses("show-for-input")">
    <label asp-for="Placeholder" class="@Orchard.GetLabelClasses()">@T["Placeholder Text"]</label>
    <div class="@Orchard.GetEndClasses()">
        <input asp-for="Placeholder" type="text" class="form-control content-preview-text" />
        <span class="hint">@T["The text to display when the field has no value."]</span>
    </div>
</div>

<div class="@Orchard.GetWrapperClasses()">
    <label asp-for="DefaultValue" class="@Orchard.GetLabelClasses()">@T["Default Value"]</label>
    <div class="@Orchard.GetEndClasses()">
        <input asp-for="DefaultValue" type="text" class="form-control content-preview-text" />
        <span class="hint">@T["The default value for this field."]</span>
    </div>
</div>

<script at="Foot">
    var initializeFieldType = (wrapper) => {
        var selectMenus = wrapper.getElementsByClassName('field-type-select-menu');
        for (let i = 0; i < selectMenus.length; i++) {
            var selectMenu = selectMenus[i];
            var widgetWrapper = selectMenu.closest('.widget-editor-body');
            selectMenu.addEventListener('change', function (e) {
                var visibleForInputContainers = (widgetWrapper || wrapper).getElementsByClassName('show-for-input');
                if (visibleForInputContainers.length == 0) {
                    return;
                }
                var value = e.target.value;
                for (let i = 0; i < visibleForInputContainers.length; i++) {
                    if (value == 'reset' || value == 'submit' || value == 'hidden') {
                        visibleForInputContainers[i].classList.add('d-none');
                    } else {
                        visibleForInputContainers[i].classList.remove('d-none');
                    }
                }
            });
        }
    };
    var wrapper = document.getElementById('@wrapperId')
    if (wrapper != null) {
        initializeFieldType(wrapper);
    }
    document.addEventListener('DOMContentLoaded', function () {
        initializeFieldType(document);
    });
</script>
