@using OrchardCore.Forms.Models
@model ShapeViewModel<InputPart>
@{
    var formElementPart = Model.Value.ContentItem.As<FormElementPart>();
    var formInputElementPart = Model.Value.ContentItem.As<FormInputElementPart>();
    var elementId = formElementPart.Id;
    var fieldName = formInputElementPart.Name;
    var fieldId = !string.IsNullOrEmpty(elementId) ? elementId : !string.IsNullOrEmpty(fieldName) ? Html.GenerateIdFromName(fieldName) : default(string);
    var fieldValue = Model.Value.DefaultValue;
    var fieldClass = Model.Value.Type == "checkbox" ? "form-check-input" : "form-control";
    var isChecked = false;

    if (ViewData.ModelState.TryGetValue(fieldName, out var fieldEntry))
    {
        if (Model.Value.Type == "checkbox")
        {
            // Unlike other input controls, a checkbox's value is only included in the
            // submitted data if the checkbox is currently checked. If it is, then the
            // value of the checkbox's value attribute is reported as the input's value, 
            // or 'on' if no value is set.
            // c.f. https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#additional_attributes

            isChecked = fieldEntry.AttemptedValue == (fieldValue ?? "on");
        }
        else
        {
            fieldValue = fieldEntry.AttemptedValue;
        }

        if (fieldEntry.Errors.Count > 0)
        {
            fieldClass += " input-validation-error is-invalid";
        }
    }
}

<input id="@fieldId" name="@fieldName" type="@Model.Value.Type" class="@fieldClass" value="@fieldValue" placeholder="@Model.Value.Placeholder" @(isChecked ? "checked" : string.Empty) />
