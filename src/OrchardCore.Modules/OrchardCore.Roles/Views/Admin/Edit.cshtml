@model EditRoleViewModel
@using OrchardCore.Roles.ViewModels

<zone Name="Title"><h1>@RenderTitleSegments(T["Edit '{0}' Role", Model.Name])</h1></zone>

<form asp-action="Edit" method="post" class="no-multisubmit">

    <div class="mb-3" asp-validation-class-for="RoleDescription">
        <label asp-for="RoleDescription" class="form-label">@T["Description"]</label>
        <textarea asp-for="RoleDescription" class="form-control"></textarea>
        <span asp-validation-for="RoleDescription" class="text-danger"></span>
    </div>

    @if (Model.IsAdminRole)
    {
        <div class="alert alert-info" role="alert">@T["This system role provides comprehensive access by granting all available permissions."]</div>
    }
    else
    {
        <div class="my-3">

            <div class="mb-3 border border-1 rounded bg-info-subtle px-3 py-2 d-flex flex-column">
                <div>
                    <strong>@T["Allow"]</strong> <span class="hint dashed">@T["Permission is granted explicitly."]</span>
                </div>
                <div>
                    <strong>@T["Effective"]</strong> <span class="hint dashed">@T["Permission is implied by a higher level permission, or explicitly granted."]</span>
                </div>
            </div>

            <div class="mb-3">
                <div class="input-group filter-options">
                    <input id="search-box" class="form-control" placeholder="@T["Search permissions"]" type="search" autofocus autocomplete="off" />
                </div>
            </div>

            @foreach (var group in Model.RoleCategoryPermissions.OrderBy(x => x.Key.Title).ThenBy(x => x.Key.Source))
            {
                <fieldset class="permissions-list">
                    <legend>
                        <span>@group.Key.Title</span>
                        @if (!string.IsNullOrEmpty(group.Key.Source))
                        {
                            <span class="hint">(@group.Key.Source)</span>
                        }
                    </legend>

                    <table class="table">
                        <thead>
                            <tr>
                                <th class="col-10">@T["Permission"]</th>
                                <th class="col-1">@T["Allow"]</th>
                                <th class="col-1">@T["Effective"]</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var permission in group.Value.OrderBy(x => x.Description))
                            {
                                <tr data-text="@permission.Description">
                                    <td class="col-10">
                                        @permission.Description
                                        @if (permission.IsSecurityCritical)
                                        {
                                            <div class="float-end">
                                                <span class="badge text-bg-danger" data-bs-toggle="tooltip" data-html="true" title="@T["This permission could allow a user to elevate their other permissions. Grant it with extreme consideration."]">@T["Security Critical"]</span>
                                            </div>
                                        }
                                    </td>
                                    <td class="col-1">
                                        <div class="form-check">
                                            <input type="checkbox" class="form-check-input" id="Checkbox.@permission.Name" name="Checkbox.@permission.Name" checked="@(Model.Role.RoleClaims.Any(x => x.ClaimValue == permission.Name))" value="true">
                                            <label class="form-check-label" for="Checkbox.@permission.Name"></label>
                                        </div>
                                    </td>
                                    <td class="col-1">
                                        <div class="form-check">
                                            <input type="checkbox" class="form-check-input" disabled="disabled" id="Effective.@permission.Name" name="Effective.@permission.Name" checked="@(Model.EffectivePermissions.Contains(permission.Name))">
                                            <label class="form-check-label" for="Effective.@permission.Name"></label>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </fieldset>
            }
        </div>
    }
    <div class="mb-3">
        <button class="btn btn-primary save" type="submit">@T["Save"]</button>
        <a class="btn btn-secondary cancel" role="button" asp-route-action="Index">@T["Cancel"]</a>
    </div>
</form>

<script at="Foot">
    $(function () {
        var searchBox = $('#search-box');
        // On each keypress filter the list of roles
        searchBox.keyup(function (e) {
            var search = $(this).val().toLowerCase();

            // On ESC, clear the search box and display all roles
            if (e.keyCode == 27 || search == '') {
                searchBox.val('');
                $('.permissions-list').toggle(true);
                $('.permissions-list > table > tbody > tr').toggle(true);
            }
            else {
                $('.permissions-list > table > tbody > tr').each(function () {
                    var text = $(this).data('text').toLowerCase();
                    var found = text.indexOf(search) > -1;
                    $(this).toggle(found);

                    if (found) {
                        $(this).parents('.permissions-list').toggle(true);
                    }
                });

                // Hide any section without visible permission
                $('.permissions-list').each(function () {
                    var list = $(this);
                    var hasVisiblePermissions = list.find('table > tbody > tr:visible').length > 0;
                    list.toggle(hasVisiblePermissions);
                });
            }
        });
    })
</script>
