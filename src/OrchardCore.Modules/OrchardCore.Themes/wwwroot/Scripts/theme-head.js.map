{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA,6DAA6D;AAC7D,qEAAqE;AACrE,MAAM,gBAAgB,IAAI,iBAAiB,SAAU,SAAS;IAE1D,IAAK,IAAI,IAAI,GAAG,IAAI,UAAU,MAAM,EAAE,IAClC,IAAK,IAAI,IAAI,GAAG,IAAI,SAAS,CAAC,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,IAAK;QAErD,MAAM,YAAY,SAAS,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE;QAC5C,IAAI,UAAU,OAAO,KAAK,QAAQ;YAC9B,CAAA,GAAA,mBAAQ,AAAD,EAAE,CAAA,GAAA,4BAAiB,AAAD;YAEzB,eAAe;YACf,cAAc,UAAU;QAC5B;IACJ;AAER;AAEA,cAAc,OAAO,CAAC,SAAS,eAAe,EAAE;IAC5C,WAAW;IACX,SAAS;AACb;;;;;ACsBA,mDACI;AADJ,oDAEI;AAFJ,yDAGI;AAHJ,uDAII;AAJJ,iDAKI;AALJ,oDAMI;AANJ,oDAOI;AAPJ,iDAQI;AARJ,uDASI;AATJ,8CAUI;AAvDJ;AAEA,MAAM,gBAAgB;AACtB,MAAM,iBAAiB;AACvB,MAAM,sBAAsB;AAE5B,MAAM,oBAAoB,IAAM,uBAAuB;AAEvD,MAAM,cAAc,IAAM,GAAG,CAAA,GAAA,sBAAa,AAAD,IAAI,CAAC,EAAE,qBAAqB;AAErE,MAAM,iBAAiB,IAAM,aAAa,OAAO,CAAC;AAElD,MAAM,iBAAiB,CAAC;IACpB,IAAI,OACA,aAAa,OAAO,CAAC,eAAe;AAE5C;AAEA,MAAM,cAAc,IAChB,OAAO,UAAU,CAAC,gCAAgC,OAAO;AAE7D,MAAM,oBAAoB;IACtB,MAAM,cAAc;IACpB,IAAI,aACA,OAAO;IAGX,OAAO,gBAAgB,gBAAgB;AAC3C;AAEA,MAAM,WAAW,CAAC;IACd,IAAI,CAAC,OACD;IAGJ,IAAI,UAAU,QACV,SAAS,eAAe,CAAC,YAAY,CACjC,iBACA,gBAAgB,gBAAgB;SAGpC,SAAS,eAAe,CAAC,YAAY,CAAC,iBAAiB,SAAS;AAExE;;;;;ACxCA,mDAAS;AAHT,MAAM,gBAAgB,IAClB,SAAS,eAAe,CAAC,YAAY,CAAC,kBAAkB;;;ACD5D,QAAQ,cAAc,GAAG,SAAU,CAAC;IAClC,OAAO,KAAK,EAAE,UAAU,GAAG,IAAI;QAAC,SAAS;IAAC;AAC5C;AAEA,QAAQ,iBAAiB,GAAG,SAAU,CAAC;IACrC,OAAO,cAAc,CAAC,GAAG,cAAc;QAAC,OAAO;IAAI;AACrD;AAEA,QAAQ,SAAS,GAAG,SAAU,MAAM,EAAE,IAAI;IACxC,OAAO,IAAI,CAAC,QAAQ,OAAO,CAAC,SAAU,GAAG;QACvC,IACE,QAAQ,aACR,QAAQ,gBACR,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,MAE3C;QAGF,OAAO,cAAc,CAAC,MAAM,KAAK;YAC/B,YAAY;YACZ,KAAK;gBACH,OAAO,MAAM,CAAC,IAAI;YACpB;QACF;IACF;IAEA,OAAO;AACT;AAEA,QAAQ,MAAM,GAAG,SAAU,IAAI,EAAE,QAAQ,EAAE,GAAG;IAC5C,OAAO,cAAc,CAAC,MAAM,UAAU;QACpC,YAAY;QACZ,KAAK;IACP;AACF","sources":["src/OrchardCore.Modules/OrchardCore.Themes/Assets/ts/theme-head.ts","src/OrchardCore.Modules/OrchardCore.Themes/Assets/ts/constants.ts","src/Frontend/helpers/globals.ts","node_modules/@parcel/transformer-js/src/esmodule-helpers.js"],"sourcesContent":["import { getPreferredTheme, setTheme } from \"./constants\";\r\n\r\n// We need to apply the classes BEFORE the page is rendered. \r\n// That is why we use a MutationObserver instead of document.Ready().\r\nconst themeObserver = new MutationObserver(function (mutations) {\r\n\r\n    for (let i = 0; i < mutations.length; i++) {\r\n        for (let j = 0; j < mutations[i].addedNodes.length; j++) {\r\n\r\n            const addedNode = mutations[i].addedNodes[j] as HTMLElement;\r\n            if (addedNode.tagName === 'BODY') {\r\n                setTheme(getPreferredTheme());\r\n\r\n                // we're done: \r\n                themeObserver.disconnect();\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nthemeObserver.observe(document.documentElement, {\r\n    childList: true,\r\n    subtree: true\r\n});\r\n","import { getTenantName } from \"@orchardcore/frontend/helpers/globals\";\r\n\r\nconst darkThemeName = \"dark\";\r\nconst lightThemeName = \"light\";\r\nconst themeStoreKeySuffix = \"theme\";\r\n\r\nconst getStoreKeySuffix = () => themeStoreKeySuffix || \"theme\";\r\n\r\nconst getStoreKey = () => `${getTenantName()}-${getStoreKeySuffix()}`;\r\n\r\nconst getStoredTheme = () => localStorage.getItem(getStoreKey());\r\n\r\nconst setStoredTheme = (theme: string | null) => {\r\n    if (theme) {\r\n        localStorage.setItem(getStoreKey(), theme);\r\n    }\r\n};\r\n\r\nconst isDarkMedia = () =>\r\n    window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\r\n\r\nconst getPreferredTheme = () => {\r\n    const storedTheme = getStoredTheme();\r\n    if (storedTheme) {\r\n        return storedTheme;\r\n    }\r\n\r\n    return isDarkMedia() ? darkThemeName : lightThemeName;\r\n};\r\n\r\nconst setTheme = (theme: string | null) => {\r\n    if (!theme) {\r\n        return;\r\n    }\r\n\r\n    if (theme === \"auto\") {\r\n        document.documentElement.setAttribute(\r\n            \"data-bs-theme\",\r\n            isDarkMedia() ? darkThemeName : lightThemeName\r\n        );\r\n    } else {\r\n        document.documentElement.setAttribute(\"data-bs-theme\", theme ?? \"\");\r\n    }\r\n};\r\n\r\nexport {\r\n    darkThemeName,\r\n    lightThemeName,\r\n    themeStoreKeySuffix,\r\n    getStoreKeySuffix,\r\n    getStoreKey,\r\n    getStoredTheme,\r\n    setStoredTheme,\r\n    isDarkMedia,\r\n    getPreferredTheme,\r\n    setTheme,\r\n};\r\n","const getTenantName = () =>\r\n    document.documentElement.getAttribute(\"data-tenant\") || \"default\";\r\n\r\nexport { getTenantName };\r\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n"],"names":[],"version":3,"file":"theme-head.js.map","sourceRoot":"../../../../../"}