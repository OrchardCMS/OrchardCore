{"mappings":"osCAAA,IAAAA,EAAAC,EAAA,eAEA,MAAMC,EAAkB,CAACC,EAAOC,GAAQ,KACpC,MAAMC,EAAmCC,SAASC,cAAc,aAEhE,IAAKF,EACD,OAGJ,MAAMG,EAAoBF,SAASC,cAAc,kBAC3CE,EAAkBH,SAASC,cAAc,sBACzCG,EAAiCJ,SAASC,cAC5C,yBAAyBJ,OAEvBQ,EAAiBD,GAAaH,cAAc,eAWlD,GATIG,IACAA,EAAYE,UAAUC,IAAI,UAC1BH,EAAYI,aAAa,eAAgB,SAGzCL,GAAmBE,IACnBF,EAAgBM,UAAYJ,EAAeI,WAG3CL,GAAeF,EAAmB,CAClC,MAAMQ,EAAqB,GAAGR,EAAkBS,gBAAgBP,EAAYQ,QAAQC,gBACpFd,EAAcS,aAAa,aAAcE,EAC7C,CAEA,MAAMI,EAAiBd,SAASe,iBAC5B,mDAAmDlB,QAGvD,IAAK,IAAImB,EAAI,EAAGA,EAAIF,EAAeG,OAAQD,IACvCF,EAAeE,GAAGV,UAAUY,OAAO,UACnCJ,EAAeE,GAAGR,aAAa,eAAgB,SAG/CV,GACAC,EAAcD,OAAK,EAI3BqB,OACKC,WAAW,gCACXC,iBAAiB,UAAU,KACxB,MAAMC,GAAc,EAAA5B,EAAA6B,kBAChBD,IAAgB5B,EAAA8B,gBAAkBF,IAAgB5B,EAAA+B,gBAClD,EAAA/B,EAAAgC,WAAS,EAAAhC,EAAAiC,qBAAgB,IAIrCR,OAAOE,iBAAiB,oBAAoB,KACxCzB,GAAgB,EAAAF,EAAAiC,sBAEhB3B,SAASe,iBAAiB,yBAAyBa,SAASC,IACxDA,EAAOR,iBAAiB,SAAS,KAC7B,MAAMxB,EAAQgC,EAAOC,aAAa,wBAClC,EAAApC,EAAAqC,gBAAelC,IACf,EAAAH,EAAAgC,UAAS7B,GACTD,EAAgBC,GAAO,KAC3B,GACJ,G,uIClBJmC,EAAAC,OAAAC,EAAA,qBACIT,IADJO,EAAAC,OAAAC,EAAA,sBAEIV,IAFJQ,EAAAC,OAAAC,EAAA,2BAGIC,IAHJH,EAAAC,OAAAC,EAAA,yBAIIE,IAJJJ,EAAAC,OAAAC,EAAA,mBAKIG,IALJL,EAAAC,OAAAC,EAAA,sBAMIX,IANJS,EAAAC,OAAAC,EAAA,sBAOIH,IAPJC,EAAAC,OAAAC,EAAA,mBAQII,IARJN,EAAAC,OAAAC,EAAA,yBASIP,IATJK,EAAAC,OAAAC,EAAA,gBAUIR,IAvDJ,IAAAa,EAAA5C,EAAA,sCAEA,MAAM8B,EAAgB,OAChBD,EAAiB,QACjBW,EAAsB,QAEtBC,EAAoB,IAAMD,GAAuB,QAEjDE,EAAc,IAAM,IAAG,EAAAE,EAAAC,oBAAmBJ,MAE1Cb,EAAiB,IAAMkB,aAAaC,QAAQL,KAE5CN,EAAkBlC,IAChBA,GACA4C,aAAaE,QAAQN,IAAexC,EAAA,EAItCyC,EAAc,IAChBnB,OAAOC,WAAW,gCAAgCwB,QAEhDjB,EAAoB,KACtB,MAAML,EAAcC,IACpB,OAAID,IAIGgB,IAAgBb,EAAgBD,EAAA,EAGrCE,EAAY7B,IACTA,IAIS,SAAVA,EACAG,SAAS6C,gBAAgBrC,aACrB,gBACA8B,IAAgBb,EAAgBD,GAGpCxB,SAAS6C,gBAAgBrC,aAAa,gBAAiBX,GAAS,K,qNCvCxEmC,EAAAC,OAAAC,EAAA,qBAASM,IAFT,MAAMA,EAAgB,IAAMxC,SAAS6C,gBAAgBf,aAAa,gBAAkB,S,uFCApFI,EAAQY,eAAiB,SAAUC,GACjC,OAAOA,GAAKA,EAAEC,WAAaD,EAAI,CAACE,QAASF,EAC3C,EAEAb,EAAQgB,kBAAoB,SAAUH,GACpCI,OAAOC,eAAeL,EAAG,aAAc,CAACM,OAAO,GACjD,EAEAnB,EAAQoB,UAAY,SAAUC,EAAQC,GAkBpC,OAjBAL,OAAOM,KAAKF,GAAQ3B,SAAQ,SAAU8B,GAE1B,YAARA,GACQ,eAARA,GACAP,OAAOQ,UAAUC,eAAeC,KAAKL,EAAME,IAK7CP,OAAOC,eAAeI,EAAME,EAAK,CAC/BI,YAAY,EACZC,IAAK,WACH,OAAOR,EAAOG,EAChB,GAEJ,IAEOF,CACT,EAEAtB,EAAQD,OAAS,SAAUuB,EAAMQ,EAAUD,GACzCZ,OAAOC,eAAeI,EAAMQ,EAAU,CACpCF,YAAY,EACZC,IAAKA,GAET,C","sources":["src/OrchardCore.Modules/OrchardCore.Themes/Assets/ts/theme-manager.ts","src/OrchardCore.Modules/OrchardCore.Themes/Assets/ts/constants.ts",".scripts/bloom/helpers/globals.ts","node_modules/@parcel/transformer-js/src/esmodule-helpers.js"],"sourcesContent":["import { darkThemeName, getPreferredTheme, getStoredTheme, lightThemeName, setStoredTheme, setTheme } from \"./constants\";\nconst showActiveTheme = (theme, focus = false) => {\n    const themeSwitcher = <HTMLButtonElement>document.querySelector(\"#bd-theme\");\n    if (!themeSwitcher) {\n        return;\n    }\n    const themeSwitcherText = document.querySelector(\"#bd-theme-text\");\n    const activeThemeIcon = document.querySelector(\".theme-icon-active\");\n    const btnToActive = <HTMLButtonElement>document.querySelector(\n        `[data-bs-theme-value=\"${theme}\"]`\n    );\n    const svgOfActiveBtn = btnToActive?.querySelector(\".theme-icon\");\n    if (btnToActive) {\n        btnToActive.classList.add(\"active\");\n        btnToActive.setAttribute(\"aria-pressed\", \"true\");\n    }\n    if (activeThemeIcon && svgOfActiveBtn) {\n        activeThemeIcon.innerHTML = svgOfActiveBtn.innerHTML;\n    }\n    if (btnToActive && themeSwitcherText) {\n        const themeSwitcherLabel = `${themeSwitcherText.textContent} (${btnToActive.dataset.bsThemeValue})`;\n        themeSwitcher.setAttribute(\"aria-label\", themeSwitcherLabel);\n    }\n    const btnsToInactive = document.querySelectorAll(\n        `[data-bs-theme-value]:not([data-bs-theme-value=\"${theme}\"])`\n    );\n    for (let i = 0; i < btnsToInactive.length; i++) {\n        btnsToInactive[i].classList.remove(\"active\");\n        btnsToInactive[i].setAttribute(\"aria-pressed\", \"false\");\n    }\n    if (focus) {\n        themeSwitcher.focus();\n    }\n};\nwindow\n    .matchMedia(\"(prefers-color-scheme: dark)\")\n    .addEventListener(\"change\", () => {\n        const storedTheme = getStoredTheme();\n        if (storedTheme !== lightThemeName && storedTheme !== darkThemeName) {\n            setTheme(getPreferredTheme());\n        }\n    });\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n    showActiveTheme(getPreferredTheme());\n    document.querySelectorAll(\"[data-bs-theme-value]\").forEach((toggle) => {\n        toggle.addEventListener(\"click\", () => {\n            const theme = toggle.getAttribute(\"data-bs-theme-value\");\n            setStoredTheme(theme);\n            setTheme(theme);\n            showActiveTheme(theme, true);\n        });\n    });\n});\n","import { getTenantName } from \"@orchardcore/bloom/helpers/globals\";\nconst darkThemeName = \"dark\";\nconst lightThemeName = \"light\";\nconst themeStoreKeySuffix = \"theme\";\nconst getStoreKeySuffix = () => themeStoreKeySuffix || \"theme\";\nconst getStoreKey = () => `${getTenantName()}-${getStoreKeySuffix()}`;\nconst getStoredTheme = () => localStorage.getItem(getStoreKey());\nconst setStoredTheme = (theme: string | null) => {\n    if (theme) {\n        localStorage.setItem(getStoreKey(), theme);\n    }\n};\nconst isDarkMedia = () =>\n    window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\nconst getPreferredTheme = () => {\n    const storedTheme = getStoredTheme();\n    if (storedTheme) {\n        return storedTheme;\n    }\n    return isDarkMedia() ? darkThemeName : lightThemeName;\n};\nconst setTheme = (theme: string | null) => {\n    if (!theme) {\n        return;\n    }\n    if (theme === \"auto\") {\n        document.documentElement.setAttribute(\n            \"data-bs-theme\",\n            isDarkMedia() ? darkThemeName : lightThemeName\n        );\n    } else {\n        document.documentElement.setAttribute(\"data-bs-theme\", theme ?? \"\");\n    }\n};\nexport {\n    darkThemeName,\n    lightThemeName,\n    themeStoreKeySuffix,\n    getStoreKeySuffix,\n    getStoreKey,\n    getStoredTheme,\n    setStoredTheme,\n    isDarkMedia,\n    getPreferredTheme,\n    setTheme,\n};\n","const getTenantName = () => document.documentElement.getAttribute(\"data-tenant\") || \"default\";\nexport { getTenantName };\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n  return dest;\n};\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n"],"names":["_constants","require","showActiveTheme","theme","focus","themeSwitcher","document","querySelector","themeSwitcherText","activeThemeIcon","btnToActive","svgOfActiveBtn","classList","add","setAttribute","innerHTML","themeSwitcherLabel","textContent","dataset","bsThemeValue","btnsToInactive","querySelectorAll","i","length","remove","window","matchMedia","addEventListener","storedTheme","getStoredTheme","lightThemeName","darkThemeName","setTheme","getPreferredTheme","forEach","toggle","getAttribute","setStoredTheme","parcelHelpers","export","exports","themeStoreKeySuffix","getStoreKeySuffix","getStoreKey","isDarkMedia","_globals","getTenantName","localStorage","getItem","setItem","matches","documentElement","interopDefault","a","__esModule","default","defineInteropFlag","Object","defineProperty","value","exportAll","source","dest","keys","key","prototype","hasOwnProperty","call","enumerable","get","destName"],"version":3,"file":"theme-manager.js.map"}