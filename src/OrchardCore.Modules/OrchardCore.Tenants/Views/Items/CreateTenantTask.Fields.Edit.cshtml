@using OrchardCore.Tenants.Workflows.ViewModels
@model CreateTenantTaskViewModel

<div class="mb-3" asp-validation-class-for="TenantNameExpression">
    <label asp-for="TenantNameExpression" class="form-label">@T["Name"] <span asp-validation-for="TenantNameExpression"></span></label>
    <input type="text" asp-for="TenantNameExpression" class="form-control code" autofocus />
    <span class="hint">@T["Select the name of the tenant to create."]</span>
</div>

<div class="mb-3" asp-validation-class-for="DescriptionExpression">
    <label asp-for="DescriptionExpression" class="form-label">@T["Description"] <span asp-validation-for="DescriptionExpression"></span></label>
    <input type="text" asp-for="DescriptionExpression" class="form-control code" autofocus />
    <span class="hint">@T["(Optional) the description of the tenant to create."]</span>
</div>

<div class="mb-3" asp-validation-class-for="RequestUrlPrefixExpression">
    <label asp-for="RequestUrlPrefixExpression" class="form-label">@T["Url Prefix"] <span asp-validation-for="RequestUrlPrefixExpression"></span></label>
    <input type="text" asp-for="RequestUrlPrefixExpression" class="form-control code" />
    <span class="hint">@T["(Optional) Example: If prefix is \"site1\", the tenant URL prefix is \"http://orchardproject.net/site1\"."]</span>
</div>

<div class="mb-3" asp-validation-class-for="RequestUrlHostExpression">
    <label asp-for="RequestUrlHostExpression" class="form-label">@T["Host name"] <span asp-validation-for="RequestUrlHostExpression"></span></label>
    <input type="text" asp-for="RequestUrlHostExpression" class="form-control code" />
    <span class="hint">@T["Example: If host is \"orchardproject.net\", the tenant site URL is \"http://orchardproject.net/\". With Liquid support."]</span>
</div>

<div class="mb-3" asp-validation-class-for="DatabaseProviderExpression">
    <label asp-for="DatabaseProviderExpression" class="form-label">@T["What type of database to use?"] <span asp-validation-for="DatabaseProviderExpression"></span></label>
    <input type="text" asp-for="DatabaseProviderExpression" class="form-control code" />
</div>

<div class="mb-3" asp-validation-class-for="TablePrefixExpression">
    <label asp-for="TablePrefixExpression" class="form-label">@T["Table Prefix"] <span asp-validation-for="TablePrefixExpression"></span></label>
    <input type="text" asp-for="TablePrefixExpression" class="form-control code" />
</div>

<div class="mb-3" asp-validation-class-for="ConnectionStringExpression">
    <label asp-for="ConnectionStringExpression" class="form-label">@T["Connection string"] <span asp-validation-for="ConnectionStringExpression"></span></label>
    <input type="text" asp-for="ConnectionStringExpression" class="form-control code" />
</div>

<div class="mb-3" asp-validation-class-for="SchemaExpression">
    <label asp-for="TablePrefixExpression" class="form-label">@T["Schema"] <span asp-validation-for="SchemaExpression"></span></label>
    <input type="text" asp-for="SchemaExpression" class="form-control code" />
    <div class="hint">@T["When left blank, the default value on the server will be used."] @T["For example, '{0}' for SQL Server.", "dbo"]</div>
</div>

<div class="mb-3" asp-validation-class-for="RecipeNameExpression">
    <label asp-for="RecipeNameExpression" class="form-label">@T["Recipe"] <span asp-validation-for="RecipeNameExpression"></span></label>
    <input type="text" asp-for="RecipeNameExpression" class="form-control code" />
</div>

<div class="mb-3" asp-validation-class-for="FeatureProfileExpression">
    <label asp-for="FeatureProfileExpression" class="form-label">@T["Feature Profile"] <span asp-validation-for="FeatureProfileExpression"></span></label>
    <input type="text" asp-for="FeatureProfileExpression" class="form-control code" />
</div>

<style asp-name="codemirror"></style>
<script asp-name="codemirror" at="Foot"></script>
<script asp-name="codemirror-mode-javascript" at="Foot"></script>
<script asp-name="codemirror-addon-display-autorefresh" at="Foot"></script>
<script asp-name="codemirror-addon-mode-simple" at="Foot"></script>
<script asp-name="codemirror-addon-mode-multiplex" at="Foot"></script>
<script asp-name="codemirror-mode-xml" at="Foot"></script>
<script asp-src="~/OrchardCore.Liquid/codemirror/liquid.js" at="Foot"></script>

<script at="Foot">
    $(function () {
        var editorRupTn = CodeMirror.fromTextArea(document.getElementById('@Html.IdFor(x => x.TenantNameExpression)'), {
            lineNumbers: true,
            styleActiveLine: true,
            matchBrackets: true,
            mode: { name: "liquid" },
        });
        var editorRupDe = CodeMirror.fromTextArea(document.getElementById('@Html.IdFor(x => x.DescriptionExpression)'), {
            lineNumbers: true,
            styleActiveLine: true,
            matchBrackets: true,
            mode: { name: "liquid" },
        });
        var editorRup = CodeMirror.fromTextArea(document.getElementById('@Html.IdFor(x => x.RequestUrlPrefixExpression)'), {
            lineNumbers: true,
            styleActiveLine: true,
            matchBrackets: true,
            mode: { name: "liquid" },
        });
        var editorRuh = CodeMirror.fromTextArea(document.getElementById('@Html.IdFor(x => x.RequestUrlHostExpression)'), {
            lineNumbers: true,
            styleActiveLine: true,
            matchBrackets: true,
            mode: { name: "liquid" },
        });
        var editorDp = CodeMirror.fromTextArea(document.getElementById('@Html.IdFor(x => x.DatabaseProviderExpression)'), {
            lineNumbers: true,
            styleActiveLine: true,
            matchBrackets: true,
            mode: { name: "liquid" },
        });
        var editorTp = CodeMirror.fromTextArea(document.getElementById('@Html.IdFor(x => x.TablePrefixExpression)'), {
            lineNumbers: true,
            styleActiveLine: true,
            matchBrackets: true,
            mode: { name: "liquid" },
        });
        var editorTp = CodeMirror.fromTextArea(document.getElementById('@Html.IdFor(x => x.SchemaExpression)'), {
            lineNumbers: true,
            styleActiveLine: true,
            matchBrackets: true,
            mode: { name: "liquid" },
        });
        var editorCs = CodeMirror.fromTextArea(document.getElementById('@Html.IdFor(x => x.ConnectionStringExpression)'), {
            lineNumbers: true,
            styleActiveLine: true,
            matchBrackets: true,
            mode: { name: "liquid" },
        });
        var editorRn = CodeMirror.fromTextArea(document.getElementById('@Html.IdFor(x => x.RecipeNameExpression)'), {
            lineNumbers: true,
            styleActiveLine: true,
            matchBrackets: true,
            mode: { name: "liquid" },
        });
        var editorFp = CodeMirror.fromTextArea(document.getElementById('@Html.IdFor(x => x.FeatureProfileExpression)'), {
            lineNumbers: true,
            styleActiveLine: true,
            matchBrackets: true,
            mode: { name: "liquid" },
        });
    });
</script>
