@model OrchardCore.ContentFields.ViewModels.EditTextFieldViewModel
@using OrchardCore.Mvc.Utilities
@{
    var settings = Model.PartFieldDefinition.GetSettings<TextFieldSettings>();
    var culture = await Orchard.GetContentCultureAsync(Model.Field.ContentItem);
}

<div class="@Orchard.GetFieldWrapperClasses(Model.PartFieldDefinition)" id="@Html.IdFor(x => x.Text)_FieldWrapper">
    <label asp-for="Text" class="@Orchard.GetLabelClasses(inputRequired: settings.Required)">@Model.PartFieldDefinition.DisplayName()</label>
    <div class="@Orchard.GetEndClasses()">
        <textarea asp-for="Text" rows="5" class="form-control content-preview-text" dir="@culture.GetLanguageDirection()"></textarea>
        <span asp-validation-for="Text"></span>
        @if (!string.IsNullOrEmpty(settings.Hint))
        {
            <span class="hint">@settings.Hint</span>
        }
    </div>
</div>

<style asp-name="codemirror"></style>
<script asp-name="codemirror" at="Foot"></script>
<script asp-name="codemirror-addon-display-autorefresh" at="Foot"></script>
<script asp-name="codemirror-addon-edit-closetag" at="Foot"></script>
<script asp-name="codemirror-addon-selection-active-line" at="Foot"></script>
<script asp-name="codemirror-mode-css" at="Foot"></script>
<script asp-name="codemirror-mode-htmlmixed" at="Foot"></script>
<script asp-name="codemirror-mode-javascript" at="Foot"></script>
<script asp-name="codemirror-mode-xml" at="Foot"></script>
<script at="Foot">
    $(function () {
        var optionsTextArea = document.getElementById('@Html.IdFor(x => x.Text)');
        // When part rendered by a flow part only the elements scripts are rendered, so the html element will not exist.
        if (optionsTextArea) {
            var editor = CodeMirror.fromTextArea(optionsTextArea, {
                autoCloseTags: true,
                autoRefresh: true,
                lineNumbers: true,
                lineWrapping: true,
                matchBrackets: true,
                styleActiveLine: true,
                mode: { name: "htmlmixed" }
            });

            editor.on('change', function (cmEditor) {
                cmEditor.save();
                $(document).trigger('contentpreview:render');
            });
        }
    });
</script>
