@model OrchardCore.ContentFields.ViewModels.EditTextFieldViewModel
@using OrchardCore.Mvc.Utilities
@{
    var settings = Model.PartFieldDefinition.GetSettings<TextFieldSettings>();
    var listSettings = Model.PartFieldDefinition.GetSettings<TextFieldPredefinedListEditorSettings>();

    var options = new List<SelectListItem>();
    var selectedValue = string.IsNullOrEmpty(Model.Text) ? listSettings.DefaultValue : Model.Text;

    foreach (var option in listSettings.Options)
    {
        var isSelected = option.Value == selectedValue
            || (string.IsNullOrEmpty(option.Value) && string.IsNullOrEmpty(selectedValue));

        options.Add(new SelectListItem { Text = option.Name, Value = option.Value, Selected = isSelected });
    }
}

<div class="@Orchard.GetFieldWrapperClasses(Model.PartFieldDefinition)" id="@Html.IdFor(x => x.Text)_FieldWrapper">
    <label asp-for="Text" class="@Orchard.GetLabelClasses(inputRequired: settings.Required)">@Model.PartFieldDefinition.DisplayName()</label>
    <div class="@Orchard.GetEndClasses()">
        @if (listSettings.Editor == EditorOption.Radio)
        {
            var i = 0;
            @foreach (var option in options)
            {
                <div class="form-check" asp-for="Text">
                    @Html.RadioButton("Text", option.Value, option.Selected, new { @class = "form-check-input content-preview-text", id = Html.IdFor(m => m.Text) + "_" + i })
                    <label class="form-check-label" for="@(Html.IdFor(m => m.Text) + "_" + i)">@option.Text</label>
                </div>
                i++;
            }
        }
        else
        {
            <select class="form-select content-preview-select" asp-for="Text" asp-items="options"></select>
        }
        <span asp-validation-for="Text"></span>
        @if (!string.IsNullOrEmpty(settings.Hint))
        {
            <span class="hint">@settings.Hint</span>
        }
    </div>
</div>
