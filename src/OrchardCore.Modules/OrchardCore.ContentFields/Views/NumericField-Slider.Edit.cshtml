@model OrchardCore.ContentFields.ViewModels.EditNumericFieldViewModel
@using System.Globalization
@using OrchardCore.Mvc.Utilities
@{
    var settings = Model.PartFieldDefinition.GetSettings<NumericFieldSettings>();
    string name = Model.PartFieldDefinition.DisplayName();
    string step = Math.Pow(10, 0 - settings.Scale).ToString(CultureInfo.InvariantCulture);
    decimal min = settings.Minimum.HasValue ? settings.Minimum.Value : 0;
    decimal max = settings.Maximum.HasValue ? settings.Maximum.Value : 10000;
    string id = Html.IdFor(m => m.Value);
    string javascriptDecimalSeparator = CultureInfo.InvariantCulture.NumberFormat.NumberDecimalSeparator;
    string serverDecimalSeparator = CultureInfo.CurrentUICulture.NumberFormat.NumberDecimalSeparator;
}

<script asp-name="nouislider" at="Foot"></script>

<div class="@Orchard.GetFieldWrapperClasses(Model.PartFieldDefinition)" id="@Html.IdFor(x => x.Value)_FieldWrapper">
    <label asp-for="Value" class="@Orchard.GetLabelClasses(inputRequired: settings.Required)">@name</label>
    <div class="@Orchard.GetEndClasses()">
        <div class="@Orchard.GetLimitedWidthWrapperClasses()">
            <div class="@Orchard.GetLimitedWidthClasses()">
                <div class="input-group mb-2">
                    @if (settings.Minimum.HasValue)
                    {
                        <span class="input-group-text">@min</span>
                    }
                    <input asp-for="Value" class="form-control content-preview-select" placeholder="@settings.Placeholder" />
                    @if (settings.Maximum.HasValue)
                    {
                        <span class="input-group-text">@max</span>
                    }
                </div>
            </div>
        </div>
        <div class="input-group mb-2">
            @if (settings.Minimum.HasValue)
            {
                <span class="ms-1 me-3">@min</span>
            }

            <div id="@(id)-nouislider" class="w-100 w-lg-75 w-xl-50 mx-3"></div>
            @if (settings.Maximum.HasValue)
            {
                <span class="ms-3 me-1">@max</span>
            }
        </div>
        @if (!string.IsNullOrEmpty(settings.Hint))
        {
            <span class="hint">@settings.Hint</span>
        }
    </div>
</div>

<script at="Foot">

    var slider = document.getElementById('@(id)-nouislider');
    var serverDecimalSeparator = $("<textarea/>").html('@serverDecimalSeparator').val()

    noUiSlider.create(slider, {
        start: [@min],
        step: @step,
        direction: '@Orchard.CultureDir()',
        connect: true,
        range: {
            'min': @min,
            'max': @max
                }
    });

    slider.noUiSlider.set("@Model.Value");

    slider.noUiSlider.on('change', function () {
        let value = slider.noUiSlider.get();
        @if (javascriptDecimalSeparator != serverDecimalSeparator)
        {
            <text>value = value.replace('@(javascriptDecimalSeparator)', serverDecimalSeparator); </text>
        }
        $('#@(id)').val(value);
    });

    $('#@(id)').on('keyup', function () {
        let value = this.value;
    @if (javascriptDecimalSeparator != serverDecimalSeparator)
    {
        <text>value = value.replace(serverDecimalSeparator, '@(javascriptDecimalSeparator)'); </text>
    }
        slider.noUiSlider.set(Number(value) || 0);
    });

</script>
