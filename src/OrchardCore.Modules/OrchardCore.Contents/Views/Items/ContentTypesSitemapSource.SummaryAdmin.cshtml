@model ShapeViewModel<ContentTypesSitemapSource>
@inject OrchardCore.Sitemaps.Services.IRouteableContentTypeCoordinator RoutableContentTypeCoordinator
@{
    var allRoutableContentTypes = await RoutableContentTypeCoordinator.ListRoutableTypeDefinitionsAsync();

    var selectedContentTypes = Model.Value.ContentTypes ?? [];

    var selectedDisplayNames = allRoutableContentTypes
        .Where(ctd => selectedContentTypes.Any(sct => sct.ContentTypeName == ctd.Name))
        .Select(x => x.DisplayName);

    var limitedDisplayName = allRoutableContentTypes
        .FirstOrDefault(cdt => cdt.Name == Model.Value.LimitedContentType.ContentTypeName)?
        .DisplayName;
}

<div>
    @if (Model.Value.IndexAll)
    {
        <span class="badge ta-badge">@T["All"]</span>
    }
    else if (Model.Value.LimitItems)
    {
        <span class="badge ta-badge">@limitedDisplayName</span>

    }
    else if (selectedDisplayNames.Any())
    {
        foreach (var displayName in selectedDisplayNames)
        {
            <span class="badge ta-badge">@displayName</span>
        }
    }
    else
    {
        <span class="badge text-bg-warning">@T["Nothing here!"]</span>
    }
    <span class="text-muted dashed">@T["Sitemap Content Types"]</span>
</div>
