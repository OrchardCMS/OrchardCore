{"version":3,"sources":["<anon>"],"sourcesContent":["/* @ts-check\n *  Javascript Copy to Clipboard Crossbrowser\n   \n    Paste the following javascript call in your HTML web page:\n    \n    <div onclick=\"select_all_and_copy(this)\">This div will copy when clicked on</div>\n*/\nfunction select_all_and_copy(el) {\n    // Copy textarea, pre, div, etc.\n    if (document.body.createTextRange) {\n        // IE\n        var textRange = document.body.createTextRange();\n        textRange.moveToElementText(el);\n        textRange.select();\n        textRange.execCommand(\"Copy\");\n        \n    }\n    else if (window.getSelection && document.createRange) {\n        // non-IE\n        var editable = el.contentEditable; // Record contentEditable status of element\n        var readOnly = el.readOnly; // Record readOnly status of element\n        el.contentEditable = true; // iOS will only select text on non-form elements if contentEditable = true;\n        el.readOnly = false; // iOS will not select in a read only form element\n        var range = document.createRange();\n        range.selectNodeContents(el);\n        var sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(range); // Does not work for Firefox if a textarea or input\n        if (el.nodeName === \"TEXTAREA\" || el.nodeName === \"INPUT\")\n            el.select(); // Firefox will only select a form element with select()\n        if (el.setSelectionRange && navigator.userAgent.match(/ipad|ipod|iphone/i))\n            el.setSelectionRange(0, 999999); // iOS only selects \"form\" elements with SelectionRange\n        el.contentEditable = editable; // Restore previous contentEditable status\n        el.readOnly = readOnly; // Restore previous readOnly status\n        if (document.queryCommandSupported(\"copy\")) {\n            var successful = document.execCommand('copy');\n            //if (successful) tooltip(el, \"Copied to clipboard.\");\n            //else tooltip(el, \"Press CTRL+C to copy\");\n        }\n        //else {\n        //    if (!navigator.userAgent.match(/ipad|ipod|iphone|android|silk/i))\n        //        tooltip(el, \"Press CTRL+C to copy\");\n        //}\n    }\n} // end function select_all_and_copy(el)\n    /* Note: document.queryCommandSupported(\"copy\") should return \"true\" on browsers that support copy\n\t    but there was a bug in Chrome versions 42 to 47 that makes it return \"false\".  So in those\n\t    versions of Chrome feature detection does not work!\n\t    See https://code.google.com/p/chromium/issues/detail?id=476508\n    */"],"names":["select_all_and_copy","el","document","body","createTextRange","textRange","moveToElementText","select","execCommand","window","getSelection","createRange","editable","contentEditable","readOnly","range","selectNodeContents","sel","removeAllRanges","addRange","nodeName","setSelectionRange","navigator","userAgent","match","queryCommandSupported"],"mappings":"AASA,SAASA,oBAAoBC,CAAE,EAE3B,GAAIC,SAASC,IAAI,CAACC,eAAe,CAAE,CAE/B,IAAIC,EAAYH,SAASC,IAAI,CAACC,eAAe,GAC7CC,EAAUC,iBAAiB,CAACL,GAC5BI,EAAUE,MAAM,GAChBF,EAAUG,WAAW,CAAC,OAE1B,MACK,GAAIC,OAAOC,YAAY,EAAIR,SAASS,WAAW,CAAE,CAElD,IAAIC,EAAWX,EAAGY,eAAe,CAC7BC,EAAWb,EAAGa,QAAQ,AAC1Bb,CAAAA,EAAGY,eAAe,CAAG,CAAA,EACrBZ,EAAGa,QAAQ,CAAG,CAAA,EACd,IAAIC,EAAQb,SAASS,WAAW,GAChCI,EAAMC,kBAAkB,CAACf,GACzB,IAAIgB,EAAMR,OAAOC,YAAY,GAC7BO,EAAIC,eAAe,GACnBD,EAAIE,QAAQ,CAACJ,GACTd,CAAAA,AAAgB,aAAhBA,EAAGmB,QAAQ,EAAmBnB,AAAgB,UAAhBA,EAAGmB,QAAQ,AAAW,GACpDnB,EAAGM,MAAM,GACTN,EAAGoB,iBAAiB,EAAIC,UAAUC,SAAS,CAACC,KAAK,CAAC,sBAClDvB,EAAGoB,iBAAiB,CAAC,EAAG,QAC5BpB,EAAGY,eAAe,CAAGD,EACrBX,EAAGa,QAAQ,CAAGA,EACVZ,SAASuB,qBAAqB,CAAC,SACdvB,SAASM,WAAW,CAAC,OAQ9C,CACJ"}
