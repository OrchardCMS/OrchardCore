@model LayerEditViewModel
@{
    var routeValues = new RouteValueDictionary
    {
        { "area", "OrchardCore.Layers" },
        { "controller", "LayerRule" },
        { "name", Model.Name }
    };
    ViewData["ConditionRouteValues"] = routeValues;

    var orderUrl = Url.Action("UpdateOrder", "LayerRule");
}

<zone Name="Title"><h1>@RenderTitleSegments(T["Edit Layer - {0}", Model.Name])</h1></zone>

<form asp-action="Edit" method="post" class="no-multisubmit">
    <div class="mb-3" asp-validation-class-for="Name">
        <label asp-for="Name" class="form-label">@T["Name"]</label>
        <input readonly="readonly" asp-for="Name" class="form-control" type="text" />
        <span asp-validation-for="Name"></span>
    </div>

    <div class="mb-3" asp-validation-class-for="Description">
        <label asp-for="Description" class="form-label">@T["Description"]</label>
        <textarea asp-for="Description" class="form-control" rows="3" type="text"></textarea>
        <span asp-validation-for="Description"></span>
    </div>

    <div class="d-none" id="ruleOrderUrl" data-url="@orderUrl"></div>
    <div class="d-none ruleorderparameters" data-param="name" data-value="@Model.Name"></div>
    <div class="d-none" id="ruleOrderErrorMessage" data-message="@T["Error updating rule order"]"></div>

    @await DisplayAsync(Model.LayerRule)

    <input class="btn btn-primary mt-3" type="submit" value="@T["Save"]" />
</form>

@await DisplayAsync(await New.ConditionsModal(Thumbnails: Model.Thumbnails, Name: Model.Name))
