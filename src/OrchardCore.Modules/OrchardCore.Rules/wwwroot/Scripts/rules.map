{"version":3,"sources":["<anon>"],"sourcesContent":["function updateRuleOrders(conditionId, toConditionId, toPosition) {\n    const urlElement = document.getElementById('ruleOrderUrl');\n    const url = urlElement.dataset.url;\n    const parameters = {};\n    const parameterElements = document.querySelectorAll('.ruleorderparameters');\n    for (const element of parameterElements) {\n        parameters[element.dataset.param] = element.dataset.value;\n    }\n    const requestVerificationTokenElement = document.querySelector(\"input[name='__RequestVerificationToken']\");\n    parameters[\"__RequestVerificationToken\"] = requestVerificationTokenElement.value;\n    parameters[\"conditionId\"] = conditionId;\n    parameters[\"toConditionId\"] = toConditionId;\n    parameters[\"toPosition\"] = toPosition;\n    fetch(url, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(parameters),\n    })\n    .catch(error => {\n        const errorMessageElement = document.getElementById('ruleOrderErrorMessage');\n        alert(errorMessageElement.dataset.message);\n    });\n}\ndocument.addEventListener('DOMContentLoaded', function () {\n    const groups = document.querySelectorAll(\".condition-group\");\n    const sortableOptions = {\n      group: {\n        name: \"sortable-list\"\n      },\n      animation: 250,\n      forceFallback: true,\n      fallbackOnBody: true,\n      swapThreshold: 0.65,\n      onEnd: function (evt) {\n        // When nesting groups use onEnd as onSort fires for every group it passes through.\n        updateRuleOrders(evt.item.dataset.conditionid, evt.item.parentElement.dataset.conditiongroupid, evt.newIndex);\n      }\n    }; \n    for (var i = 0; i < groups.length; i++) {\n      new Sortable(groups[i], sortableOptions);\n    }\n});\n"],"names":["updateRuleOrders","conditionId","toConditionId","toPosition","url","urlElement","document","getElementById","dataset","parameters","element","querySelectorAll","param","value","requestVerificationTokenElement","querySelector","fetch","method","headers","body","JSON","stringify","catch","error","alert","errorMessageElement","message","addEventListener","groups","sortableOptions","group","name","animation","forceFallback","fallbackOnBody","swapThreshold","onEnd","evt","item","conditionid","parentElement","conditiongroupid","newIndex","i","length","Sortable"],"mappings":"AAAA,SAASA,iBAAiBC,CAAW,CAAEC,CAAa,CAAEC,CAAU,EAE5D,IAAMC,EAAMC,AADOC,SAASC,cAAc,CAAC,gBACpBC,OAAO,CAACJ,GAAG,CAC5BK,EAAa,CAAC,EAEpB,IAAK,IAAMC,KADeJ,SAASK,gBAAgB,CAAC,wBAEhDF,CAAU,CAACC,EAAQF,OAAO,CAACI,KAAK,CAAC,CAAGF,EAAQF,OAAO,CAACK,KAAK,AAI7DJ,CAAAA,EAAW,0BAA6B,CAAGK,AADHR,SAASS,aAAa,CAAC,4CACYF,KAAK,CAChFJ,EAAW,WAAc,CAAGR,EAC5BQ,EAAW,aAAgB,CAAGP,EAC9BO,EAAW,UAAa,CAAGN,EAE3Ba,MAAMZ,EAAK,CACPa,OAAQ,OACRC,QAAS,CACL,eAAgB,kBACpB,EACAC,KAAMC,KAAKC,SAAS,CAACZ,EACzB,GACCa,KAAK,CAACC,IAEHC,MAAMC,AADsBnB,SAASC,cAAc,CAAC,yBAC1BC,OAAO,CAACkB,OAAO,CAC7C,EACJ,CAEApB,SAASqB,gBAAgB,CAAC,mBAAoB,WAC1C,IAAMC,EAAStB,SAASK,gBAAgB,CAAC,oBACnCkB,EAAkB,CACtBC,MAAO,CACLC,KAAM,eACR,EACAC,UAAW,IACXC,cAAe,CAAA,EACfC,eAAgB,CAAA,EAChBC,cAAe,IACfC,MAAO,SAAUC,CAAG,EAElBrC,iBAAiBqC,EAAIC,IAAI,CAAC9B,OAAO,CAAC+B,WAAW,CAAEF,EAAIC,IAAI,CAACE,aAAa,CAAChC,OAAO,CAACiC,gBAAgB,CAAEJ,EAAIK,QAAQ,CAC9G,CACF,EACA,IAAK,IAAIC,EAAI,EAAGA,EAAIf,EAAOgB,MAAM,CAAED,IACjC,IAAIE,SAASjB,CAAM,CAACe,EAAE,CAAEd,EAE9B"}
