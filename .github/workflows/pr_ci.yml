name: PR - CI
on: 
  pull_request:
    branches: [ main, release/** ]
concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
jobs:
  build_test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, windows-2022]
    name: Build & Test
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
    - uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6
      with:
        node-version: "15"
        package-manager-cache: false
    - uses: ./.github/actions/setup-dotnet
    - name: Build
      # We disable NuGet audit warnings, see https://learn.microsoft.com/en-us/nuget/reference/errors-and-warnings/nu1901-nu1904.
      # Security issues being discovered in NuGet packages we use can happen at any time, and thus all our CI builds that
      # treat warnings as errors could break anytime, without us changing the code. This prevents that. Treating them as
      # warnings and other better approaches don't work, see https://github.com/OrchardCMS/OrchardCore/pull/16317.
      run: |
        dotnet build -c Release /p:TreatWarningsAsErrors=true /p:RunAnalyzers=true /p:NuGetAudit=false
    - name: Unit Tests
      run: |
        dotnet test -c Release --no-build ./test/OrchardCore.Tests/OrchardCore.Tests.csproj
    - name: Functional Tests
      if: matrix.os == 'ubuntu-24.04'
      run: |
        cd test/OrchardCore.Tests.Functional
        npm install
        npm run cms:test
        npm run mvc:test
    - uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5
      if: matrix.os == 'ubuntu-24.04' && failure()
      with:
        name: functional-test-failure
        path: |
          test/OrchardCore.Tests.Functional/cms-tests/cypress/screenshots
          src/OrchardCore.Cms.Web/App_Data/logs
